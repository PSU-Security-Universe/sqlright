DROP DATABASE IF EXISTS database1171;
CREATE DATABASE database1171  TEMPLATE template0;
CREATE TABLE IF NOT EXISTS t0(c0 TEXT  NULL PRIMARY KEY DEFAULT ((((0.82296234)::MONEY)::VARCHAR COLLATE "en_US.utf8")) UNIQUE) PARTITION BY HASH((0.4166791514732734), (t0.c0), ((((t0.c0)::FLOAT) IN (0.7613601886914343)) IS UNKNOWN)timetz_bloom_ops, (((((((('109.214.109.113') IN ('113.14.123.113'))OR(CAST((((('(-1023320047,1794873466]'::int4range)*('(0,2014436506]'::int4range)))-((('[-1027906667,-129773809)'::int4range)*('(-954403361,-829178666)'::int4range)))) AS BOOLEAN))))AND((((t0.c0 COLLATE "C") COLLATE "C") SIMILAR TO ('167.214.223.223')::VARCHAR))))OR(t0.c0~*t0.c0)))time_bloom_ops);
CREATE TABLE t0(c0 BIT VARYING(373) , c1 CHAR(97)  DEFAULT (((((((((0.39872333)::MONEY)::VARCHAR(422))||(((B'11010000110100000101000111000')>>(B'101110111110001110110101110100')))))||(TRUE)))||(0.39872333))) UNIQUE, EXCLUDE ((abs(- (length(t0.c1)))) xid8_ops NULLS LAST WITH -, c0 timestamp_minmax_multi_ops ASC WITH *, (CAST(('55.208.178.50')::INT AS BOOLEAN)) WITH |) WITH (autovacuum_vacuum_threshold=1213421807)) PARTITION BY LIST((0.8229623476667843)oid_bloom_ops) WITH (autovacuum_freeze_min_age=896678374, autovacuum_freeze_max_age=38243262, autovacuum_vacuum_cost_limit=7336, autovacuum_analyze_scale_factor=0.1, parallel_workers=273, fillfactor=87, autovacuum_vacuum_scale_factor=0.8, autovacuum_freeze_table_age=816242415, autovacuum_vacuum_cost_delay=40, autovacuum_analyze_threshold=1203502376, autovacuum_vacuum_threshold=946460476);
CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 TEXT  PRIMARY KEY DEFAULT (((((((('[-1898259686,944526130]'::int4range)-('[-1898259686,620277560)'::int4range)))*((('[-304619173,2006998706]'::int4range)-('[-829178666,-93336652)'::int4range)))))*((((('[-1830862175,-1813671396]'::int4range)-('[-1576485874,788065652]'::int4range)))*(range_merge('[-1434623153,862717477]'::int4range, '(-318552624,-111353000]'::int4range))))))::VARCHAR), c1 DECIMAL , c2 money , c3 REAL ) ON COMMIT PRESERVE ROWS ;
CREATE UNLOGGED TABLE t1(LIKE t0);
CREATE TEMP TABLE t2(c0 FLOAT  PRIMARY KEY UNIQUE NULL) PARTITION BY LIST(('186.214.70.71')time_ops) ON COMMIT DELETE ROWS ;
CREATE TABLE t2(LIKE t1);
CREATE TEMPORARY TABLE t3(LIKE t0);
CREATE TEMPORARY TABLE t4(c0 FLOAT , c1 inet , c2 boolean  DEFAULT ((((range_merge('(-1898259686,1422211082]'::int4range, (('[-1708397358,-226638522]'::int4range)-('[32857997,534903842]'::int4range))))&&((((('[-2035556552,170594644)'::int4range)*('[-1576485874,-1576485874)'::int4range)))*((('(-946147420,861398248]'::int4range)*('[-798631455,-727420602]'::int4range))))))) IS FALSE) UNIQUE);
ALTER TABLE  ONLY t0 ADD CONSTRAINT R PRIMARY KEY(c3, c1, c2), ALTER c0  RESET(n_distinct), NOT OF, SET LOGGED, ALTER c0 SET STORAGE PLAIN, ALTER c0 SET STATISTICS 6841, FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, SET WITHOUT CLUSTER, ALTER c1  SET(n_distinct=-1.0E-10, n_distinct_inherited=-1.0E-10), ENABLE ROW LEVEL SECURITY, ALTER c0 SET DEFAULT '0.3987233421652312', VALIDATE CONSTRAINT asdf, NO FORCE ROW LEVEL SECURITY, DROP  IF EXISTS c2 CASCADE, OWNER TO SESSION_USER;
ALTER TABLE  t2 VALIDATE CONSTRAINT asdf, ALTER c1  SET(n_distinct_inherited=-0.2, n_distinct=-1);
ALTER TABLE  t2 REPLICA IDENTITY NOTHING, NO FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, ALTER c3  TYPE DECIMAL, DISABLE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, DROP  IF EXISTS c2, OWNER TO CURRENT_USER, SET WITHOUT CLUSTER;
DELETE FROM t2 WHERE TRUE;
CREATE STATISTICS  s0 (dependencies, mcv) ON c2, c0 FROM t1;
RESET ROLE;
NOTIFY test, '6';
VACUUM VERBOSE ANALYZE t4;
UNLISTEN asdf;
DELETE FROM ONLY t4 WHERE t4.c2 RETURNING 0.5274635981339048651506118403631262481212615966796875;
CREATE STATISTICS  IF NOT EXISTS s1 (dependencies, mcv, ndistinct) ON c0, c3 FROM t1;
CREATE STATISTICS  IF NOT EXISTS s2 (ndistinct) ON c0, c1 FROM t3;
CREATE STATISTICS  IF NOT EXISTS s3 ON c0, c2 FROM t2;
SET LOCAL min_parallel_index_scan_size=491398467;
RESET ROLE;
CREATE VIEW v0(c0, c1, c2, c3) AS (SELECT ALL (+ (('(-2083754131,-954403361)'::int4range)::INT)) IN (+ (pg_backend_pid()), 0.41667914, + (+ (1168794149))), ((t2.c3)<(-3.04619173E8)), '176.8.203.55', to_ascii(t1.c0) FROM t2*, t1*);
CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ON (((((t2.c0 COLLATE "C"))||(((((B'1111111111111111111111111111111110100010000010001011110000001110')&(B'1111000000100011101110010011010')))|(((B'1010000111111111110011000101010')#(B'11010100001001110111000110001')))))) COLLATE "en_US.utf8")) split_part(t2.c0, get_byte(t2.c0, 944526130)) FROM ONLY t2, ONLY t4 GROUP BY (((((t2.c1)::int4range)*((((('(158977813,437914168]'::int4range)-('(111393664,259291187)'::int4range)))-((('(776666615,1903391502]'::int4range)*('[-896258511,-486367511]'::int4range)))))))-((((('(-1647827475,-1605621585)'::int4range)*((('[-2083754131,-1876799462)'::int4range)-('[-2033068435,-862732765)'::int4range)))))*((((('(-226638522,2091985180)'::int4range)*('(0,138218485]'::int4range)))*((('(-1584493071,1628880212)'::int4range)-('[437914168,1541137114]'::int4range)))))))) LIMIT 2437667068038862008 OFFSET 4286778097635003362);
CREATE OR REPLACE RECURSIVE VIEW v0(c0) AS (SELECT t2.c1 FROM ONLY t2, ONLY t1 WHERE (t1.c3) NOT IN (+ (CAST(t1.c2 AS INT))));
CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT 0.2920560007366732602207548552541993558406829833984375 FROM ONLY t4, t3, t0);
DROP STATISTICS s1;
SET LOCAL cursor_tuple_fraction=DEFAULT;
UPDATE t4 SET c1 = NULL, c2 = FALSE, c0 = 0.47296497 WHERE t4.c2;
DROP INDEX IF EXISTS i1, i1 RESTRICT;
COMMIT;
SET SESSION statement_timeout = 5000;
