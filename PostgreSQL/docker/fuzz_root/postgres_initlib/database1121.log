DROP DATABASE IF EXISTS database1121;
CREATE DATABASE database1121  TEMPLATE template0;
CREATE TABLE IF NOT EXISTS t0(c0 DECIMAL , UNIQUE(c0), PRIMARY KEY(c0), EXCLUDE (c0 NULLS FIRST WITH >, (('191.191.191.199')::VARCHAR) oid_bloom_ops NULLS LAST WITH +), CHECK(CAST(((CAST('症<' AS int4range))*('(2125766709,2125766709)'::int4range)) AS VARCHAR(988))~*((current_schema())||((0.06615321)::MONEY)))) WITH (autovacuum_freeze_min_age=144847641, autovacuum_vacuum_cost_limit=1564, parallel_workers=97, autovacuum_freeze_table_age=1505288814, autovacuum_vacuum_cost_delay=89);
CREATE TEMP TABLE IF NOT EXISTS t0(c0 bigserial  PRIMARY KEY UNIQUE) PARTITION BY LIST(((((NOT (((t0.c0)IS NOT DISTINCT FROM(t0.c0))))::VARCHAR(393))||(CAST(2.12576666E9 AS MONEY))))) WITH (parallel_workers=46, autovacuum_vacuum_cost_limit=9879, autovacuum_vacuum_threshold=1689917473, autovacuum_freeze_min_age=934242061) ON COMMIT DROP ;
CREATE TABLE IF NOT EXISTS t0(c0 FLOAT  UNIQUE PRIMARY KEY NOT NULL, c1 DECIMAL  UNIQUE CHECK ((+ (to_hex('9np0CREATE TEMP TABLE IF NOT EXISTS t0(c0 TEXT COLLATE "C" , c1 FLOAT , CHECK(((((t0.c0)||(- (((1116462310)*(-818390041))))))!=(((t0.c0)||(0.7177083))))), PRIMARY KEY(c1, c0), EXCLUDE (c1 NULLS FIRST WITH |>>) WITH (autovacuum_enabled=0, autovacuum_freeze_table_age=1186367787, fillfactor=75, autovacuum_analyze_scale_factor=0.01, autovacuum_vacuum_cost_limit=8997, autovacuum_freeze_max_age=1398370775, autovacuum_vacuum_scale_factor=0.9) WHERE ((t0.c0 SIMILAR TO t0.c0))) ON COMMIT DELETE ROWS ;
CREATE TEMP TABLE t0(c0 DECIMAL  UNIQUE PRIMARY KEY NULL DEFAULT (0.753255728009509351039696412044577300548553466796875)) PARTITION BY HASH(((('[-1394679925,-1394679925]'::int4range)<@((('(751603563,9223372036854775807)'::int4range)-((((('[-897589034,200352520)'::int4range)-('[-2002378240,1821793358)'::int4range)))-((('(-1394679925,-880185487)'::int4range)*('[1207902769,1559098682]'::int4range))))))))), ((((((('E')||('[-1702092137,-818390041]'::int4range)))||(hostmask('25.191.147.191'))) COLLATE "C") COLLATE "C"))record_image_ops) WITH (parallel_workers=913, autovacuum_analyze_scale_factor=1, autovacuum_freeze_min_age=142119441, autovacuum_freeze_table_age=1594399575, autovacuum_vacuum_cost_delay=4, fillfactor=44, autovacuum_freeze_max_age=1501658285, autovacuum_analyze_threshold=969322375, autovacuum_vacuum_scale_factor=1, autovacuum_vacuum_threshold=292788120);
CREATE TABLE IF NOT EXISTS t0(c0 boolean );
CREATE TEMPORARY TABLE t1(c0 FLOAT , c1 TEXT , c2 FLOAT ) PARTITION BY LIST(((((((((('(-1225199104,1450278513)'::int4range)*('[-469722218,1868691596]'::int4range)))-((('(-1768884861,-1764794215)'::int4range)*('[-1189471842,665166640]'::int4range)))))*((((('[-1394679925,1229465890]'::int4range)*('(-469722218,635838394)'::int4range)))*((('(-1225199104,1690427559]'::int4range)*('[689078989,1260458125)'::int4range)))))))-((((((('[392945788,757415040)'::int4range)*('[454471482,1559098682)'::int4range)))*((('[-251248024,-251248024)'::int4range)*('[-61072243,906377840]'::int4range)))))-((((('(-1702092137,1229465890)'::int4range)*('[124341499,1365351771]'::int4range)))*((('(-768851211,201921251]'::int4range)*('(-717234898,1322365055]'::int4range)))))))))jsonb_ops) WITH (parallel_workers=847);
CREATE TEMPORARY TABLE IF NOT EXISTS t1(c0 boolean  UNIQUE PRIMARY KEY NULL, UNIQUE(c0), CHECK(((CAST(0.8072701376644799697857024511904455721378326416015625 AS VARCHAR(302)) COLLATE "C") SIMILAR TO ((((('J䋵')::VARCHAR(437))||('8.244.242.134')))||(0.56364458282684470891155115168658085167407989501953125)))), EXCLUDE (c0 array_ops NULLS FIRST WITH +) WITH (autovacuum_freeze_min_age=383694738, autovacuum_vacuum_threshold=1089341005, autovacuum_vacuum_cost_delay=39, autovacuum_enabled=1, autovacuum_freeze_table_age=687517849, autovacuum_vacuum_scale_factor=0.01), FOREIGN KEY (c0) REFERENCES t0(c0) ON DELETE RESTRICT) INHERITS(t0) ON COMMIT DROP ;
CREATE UNLOGGED TABLE t1(c0 DECIMAL  UNIQUE NULL PRIMARY KEY, CHECK((((((((('[-1194016208,1868691596)'::int4range)-('[556952643,2123131413]'::int4range)))*((('[453866456,804051621)'::int4range)-('(-1315621093,-100016372)'::int4range)))))*((((('[201921251,675820320)'::int4range)-('(-477608013,-254733446)'::int4range)))*((('[-254733446,1324877737)'::int4range)-('[-1017302671,-477608013)'::int4range)))))))-|-((((((('[811103687,1834789663]'::int4range)-('[316290061,919770213]'::int4range)))-((('(-317787063,21194943)'::int4range)*('[-1488971201,72960018)'::int4range)))))*((((('[226901277,1303450065)'::int4range)*('[-1297265019,-1217958385]'::int4range)))*((('(-795950943,-630276366]'::int4range)*('[-1563674777,-882278292]'::int4range))))))))), EXCLUDE (c0 ASC NULLS LAST WITH =, c0 WITH #, ('38.113.67.40') pg_lsn_ops DESC WITH #), UNIQUE(c0)) PARTITION BY RANGE((CAST(0.8026281 AS MONEY)), (CAST(0.12386342 AS MONEY))int4_minmax_ops, (((((CAST(t1.c0 AS VARCHAR(206)))||(convert_from('6', 'UTF8')~((0.7605933)::MONEY)::VARCHAR)))LIKE(((CAST(+ (1628891301) AS VARCHAR))||(CAST(0.80137 AS MONEY))))))numeric_ops);
CREATE TEMP TABLE t1(c0 money ) INHERITS(t0);
CREATE UNLOGGED TABLE t1(LIKE t0 EXCLUDING STATISTICS);
CREATE TEMP TABLE t2(LIKE t1);
CREATE UNLOGGED TABLE t3(c0 money  UNIQUE PRIMARY KEY NOT NULL CHECK (((((FALSE)OR((((((((t3.c0) BETWEEN SYMMETRIC ((0.82626545)::MONEY) AND (t3.c0))AND((t3.c0) BETWEEN SYMMETRIC (CAST(0.5851713 AS MONEY)) AND ((0.12386342)::MONEY))))OR((((0.8026281)::MONEY)IS NOT DISTINCT FROM(t3.c0)))))OR(('-1488971201' COLLATE "C")~(506959344)::VARCHAR(421))))))AND((left('-189392177', '5?') SIMILAR TO CAST(t3.c0 AS VARCHAR(783)))))) DEFAULT ((0.015209016)::MONEY), EXCLUDE ((0.8594676150084051) DESC NULLS LAST WITH -, (0.5345696336118411) text_pattern_ops DESC WITH *) WITH (autovacuum_enabled=0, autovacuum_analyze_threshold=976485650, autovacuum_vacuum_cost_limit=3070, autovacuum_freeze_table_age=1234527801)) INHERITS(t0);
CREATE TEMPORARY TABLE IF NOT EXISTS t3(c0 int4range , UNIQUE(c0) WITH (fillfactor=79), EXCLUDE (((0.2126978269368098306557612886535935103893280029296875)::DECIMAL) int8_ops DESC NULLS FIRST WITH <->, c0 int8_ops ASC NULLS LAST WITH >=, c0 DESC NULLS FIRST WITH |) WITH (autovacuum_enabled=1, autovacuum_freeze_min_age=237172026)) PARTITION BY HASH((((((((t3.c0)*(((t3.c0)*(t3.c0)))))-(((t3.c0)*(((t3.c0)-(t3.c0)))))))*((((((('[-59424897,556952643)'::int4range)*(t3.c0)))*(((t3.c0)*(t3.c0)))))-(t3.c0))))), (((length(CAST(0.8535945490876953 AS VARCHAR)))%(((((CAST(CAST(0.030701838 AS MONEY) AS INT))%(+ ('-1543533404'))))/(length('-818390041'))))))macaddr_bloom_ops) ON COMMIT DROP ;
CREATE TABLE IF NOT EXISTS t3(LIKE t1);
CREATE TABLE IF NOT EXISTS t4(LIKE t0);
CREATE TABLE t5(LIKE t3);
NOTIFY test, 'W';
INSERT INTO t3(c0) VALUES((0.8594676) IN (- ((')Q[O')::INT), ((-1189471842)+(CAST(689078989 AS INT))))), (TRUE);
INSERT INTO t0(c0) VALUES(TRUE);
SET CONSTRAINTS ALL DEFERRED;
ALTER TABLE  ONLY t0 ADD CONSTRAINT v CHECK((upper(('o' COLLATE "C")) SIMILAR TO (('<')||(- (((-1091088670)%(235353280))))))) NOT VALID;
TRUNCATE t2, t1, t3, t0, t5, t4 CONTINUE IDENTITY;
UPDATE t1 SET c0 = DEFAULT WHERE ((t1.c0)OR((((t1.c0) IS UNKNOWN)::VARCHAR(561) SIMILAR TO (0.7972687693476092629651930110412649810314178466796875)::VARCHAR)));
CLUSTER t1;
CLUSTER t0;
CLUSTER t4;
CLUSTER ;
RESET ROLE;
RESET ROLE;
INSERT INTO t2(c0) OVERRIDING SYSTEM VALUE VALUES((((((((('[-818114453,882007625]'::int4range)*('[-1225199104,-711136295)'::int4range)))*((('[-197891363,1620558380]'::int4range)*('[325337605,1201701190)'::int4range)))))-((((('[-977247353,1358777077)'::int4range)*('[-1753071937,654011455)'::int4range)))*((('(-1091088670,-254733446)'::int4range)*('[-1303733825,-1303733825)'::int4range)))))))<@((((((('[-1327403517,39311399]'::int4range)*('(-738619895,699137623]'::int4range)))-((('(-880185487,1229465890]'::int4range)*('[-795950943,703827114)'::int4range)))))*((((('[-1303733825,1517683897]'::int4range)*('(-36351344,831144488)'::int4range)))*((('(-1774468128,-235156122)'::int4range)*('(-1488971201,-229414277]'::int4range))))))))), (TRUE), (FALSE), ((((((((((((('[-732449500,-711136295)'::int4range)*('(-178564331,46655030]'::int4range)))-(range_merge('(-1265960517,235353280)'::int4range, NULL))))>&((((('[-1091088670,-1)'::int4range)*('(-1627137537,-129093219)'::int4range)))*((('(1061758353,1664394367]'::int4range)*('(-1297265019,-255402229)'::int4range)))))))OR((((((('(325337605,618122825)'::int4range)*('[-1303733825,-242359789]'::int4range)))-((('(-371905321,324750120)'::int4range)-('[-500532528,1365351771]'::int4range)))))&&((((('[-1543533404,663917600]'::int4range)*('(1,1144199096]'::int4range)))*((('[-782432960,1274121324]'::int4range)*('[-477608013,72960018)'::int4range)))))))))OR(NOT ((('(-1543533404,391976837]'::int4range)&<((('(-228944692,1760658369]'::int4range)-('(-1091088670,-61072243)'::int4range))))))))OR((((((354152478)^(-704244772)))::VARCHAR)LIKE((lower('804051621'))::VARCHAR)))));
INSERT INTO t5(c0) VALUES(((((((('(1201701190,1303450065)'::int4range)*('[-1087986604,21194943]'::int4range)))*(CAST(2077475507 AS int4range))))*((((('[-61072243,1868691596)'::int4range)*('[438602053,506959344)'::int4range)))-((('[-1971446939,1690427559]'::int4range)*('[-830367824,1585950895)'::int4range))))))) BETWEEN SYMMETRIC ((((('[-477608013,85123591]'::int4range)-((('[-795950943,107428082)'::int4range)*('[-731552241,201921251]'::int4range)))))*((((('[-1297265019,1201701190]'::int4range)-('[-1892221254,-1768884861)'::int4range)))-((('(-723608333,-187694523]'::int4range)-('[-1189471842,-546921600]'::int4range))))))) AND ((((((('(-9223372036854775808,200352520)'::int4range)*('(-795950943,99069340)'::int4range)))*((('(-1189471842,358283543)'::int4range)-('[-2025616623,-1387334974)'::int4range)))))*(range_merge((('(1934914287,1963518569)'::int4range)-('(-1243524825,470183666]'::int4range)), '[-10643219,9223372036854775807)'::int4range)))));
INSERT INTO t4(c0) VALUES(FALSE), (((0.44874942)::MONEY) BETWEEN (CAST(0.96939903 AS MONEY)) AND (CAST(0.37220463 AS MONEY))), (FALSE), (((((to_ascii('t'))||(length('0.3722046436118538'))))>=(substr((('0.5345696336118411')||('169.168.113.46')), ('[466093524,1409899932]'::int4range)::INT, ((-804509266)+(-768851211)))))) ON CONFLICT (c0) DO NOTHING;
INSERT INTO t3(c0) VALUES(FALSE);
RESET ALL;
UPDATE t1 SET c0 = TRUE WHERE t1.c0;
UPDATE t4 SET c0 = TRUE WHERE t4.c0;
DROP INDEX IF EXISTS i1;
DELETE FROM ONLY t2 RETURNING 0.46441976408059770786707076695165596902370452880859375;
ALTER TABLE  ONLY t4 NOT OF, DISABLE ROW LEVEL SECURITY, ALTER c0  TYPE DECIMAL, FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0 SET NOT NULL, ALTER c0 SET STORAGE MAIN;
ALTER TABLE  t3 OWNER TO CURRENT_USER, ADD CONSTRAINT h UNIQUE(c0) WITH (autovacuum_vacuum_scale_factor=1.0E-5, autovacuum_analyze_threshold=392088589, autovacuum_freeze_min_age=560276161, autovacuum_analyze_scale_factor=0, autovacuum_enabled=0, autovacuum_freeze_max_age=177284938, autovacuum_vacuum_threshold=1064180041, autovacuum_vacuum_cost_delay=20, autovacuum_vacuum_cost_limit=2357, fillfactor=44) NOT VALID;
ALTER TABLE  t4 ADD CONSTRAINT 혏 UNIQUE(c0) WITH (autovacuum_freeze_min_age=455906594, autovacuum_vacuum_threshold=599122145, fillfactor=71, autovacuum_analyze_scale_factor=0.2, autovacuum_vacuum_scale_factor=0.2) NOT VALID;
ALTER TABLE  t3 SET UNLOGGED, ALTER c0 SET STORAGE PLAIN, ALTER c0  SET DATA TYPE DECIMAL, ENABLE ROW LEVEL SECURITY, ALTER c0  SET(n_distinct_inherited=-0.8), VALIDATE CONSTRAINT asdf, DISABLE ROW LEVEL SECURITY, OWNER TO SESSION_USER;
ALTER TABLE  t2 ADD CONSTRAINT z FOREIGN KEY (c0) REFERENCES t0(c0) MATCH FULL, ALTER c0  SET(n_distinct_inherited=1.0E-4, n_distinct=0), SET WITHOUT OIDS, SET WITHOUT CLUSTER, ALTER c0 SET DEFAULT lower(('' COLLATE "en_US.utf8"))~rtrim(CAST('-1217958385' AS VARCHAR(271))), NO FORCE ROW LEVEL SECURITY, OWNER TO CURRENT_USER, ALTER c0  RESET(n_distinct_inherited, n_distinct), ALTER c0 SET STATISTICS 9001, FORCE ROW LEVEL SECURITY, NOT OF;
ALTER TABLE  ONLY t1 ALTER c0 SET STORAGE PLAIN;
INSERT INTO t4(c0) VALUES(NULL), (TRUE), (CAST(0.91103653176461241169903360059834085404872894287109375 AS BOOLEAN));
INSERT INTO t5(c0) VALUES(FALSE), (FALSE);
CREATE SEQUENCE IF NOT EXISTS seq INCREMENT -1640145953 CACHE 665166640 OWNED BY NONE;
RESET ROLE;
DROP INDEX IF EXISTS i3, i0;
ALTER TABLE  ONLY t2 VALIDATE CONSTRAINT asdf;
LISTEN asdf;
DROP INDEX IF EXISTS i0;
UNLISTEN *;
DISCARD SEQUENCES;
ANALYZE t3;
UPDATE t3 SET c0 = (t3.c0) WHERE (((0.6396572554315771430566428534802980720996856689453125)::VARCHAR)LIKE(((((0.6136897558594551771449232546729035675525665283203125)::VARCHAR COLLATE "en_US.utf8"))||(t3.c0))));
UPDATE t2 SET c0 = DEFAULT WHERE translate(upper('\ la7'), quote_literal('-189392177'), ('' COLLATE "C"))!~(((to_char((0.15443338)::MONEY, ''))||(0.2880249514457728)) COLLATE "C");
UPDATE t3 SET c0 = FALSE WHERE t3.c0;
RESET ROLE;
INSERT INTO t3(c0) VALUES(FALSE), (lower_inf((((((('[-317787063,1688981342)'::int4range)*('[-317787063,232815791]'::int4range)))*((('(1240029070,1654164220]'::int4range)*('(-846983030,-119065163]'::int4range)))))*((((('[-221414793,36608987]'::int4range)-('[453866456,976096403)'::int4range)))*((('[-977247353,2108872369)'::int4range)-('[-1885104438,1891423381)'::int4range))))))));
DELETE FROM ONLY t2 WHERE lower_inc((((('[-1933486052,-1521960784]'::int4range)-('[-1057214021,1597460773]'::int4range)))*((('(1450278513,1544353213]'::int4range)*('[703827114,1201701190]'::int4range))))) RETURNING 2.2690128E8;
RESET ALL;
UPDATE t3 SET c0 = TRUE WHERE (((((((('(-61072243,811103687]'::int4range)*('(-1618664260,1229465890]'::int4range)))-((('[-1416172176,-361163352]'::int4range)-('(-630276366,-572741505]'::int4range)))))-((((('[-199876085,892938474)'::int4range)-('(1651517202,1896346868)'::int4range)))*((NULL)::int4range)))))@>((((((('[207486491,1636796422]'::int4range)-('(-1225199104,-477608013)'::int4range)))*((('[-251248024,688654783]'::int4range)*('[-1721819645,313591985]'::int4range)))))*((((('(-1362051972,1893533720)'::int4range)-('[700570300,2037381465]'::int4range)))*((('[1595280,1116462310)'::int4range)*('(-1950243821,-907203776)'::int4range))))))));
UPDATE t3 SET c0 = FALSE WHERE ((((lower('sL	|kv''LH'))||((('Os[v赙Gd')||('')))) SIMILAR TO substr('e#w(#l_ir', 1211196999, 392945788))) BETWEEN SYMMETRIC (CAST((CAST(-56963684 AS VARCHAR) COLLATE "en_US.utf8") AS BOOLEAN)) AND (t3.c0);
UPDATE t3 SET c0 = ((((((((('(-1960825126,-1288784134)'::int4range)-('[67499226,665166640]'::int4range)))*((('(-619721314,699137623]'::int4range)*('(906377840,908845425)'::int4range)))))*((((('(-61072243,2052425192]'::int4range)*('(-85526987,1868691596)'::int4range)))*((('[665529298,751603563)'::int4range)*('(-426897590,919770213]'::int4range)))))))<<(((((range_merge('[654011455,1854458398]'::int4range, '(-1674938355,-1612869408)'::int4range))-((('(-869701391,39311399)'::int4range)-('(100115052,2120774732)'::int4range)))))*((((('[-441054358,2125766709)'::int4range)*('[-1368064378,-1033533989]'::int4range)))-((('(882007625,1581964605)'::int4range)-('(-1454728152,-57095314)'::int4range))))))))) WHERE t3.c0;
UPDATE t0 SET c0 = FALSE WHERE t0.c0;
ALTER TABLE  t3 ALTER c0 DROP NOT NULL, ENABLE ROW LEVEL SECURITY, ALTER c0  TYPE int4range, DISABLE ROW LEVEL SECURITY, ALTER c0 SET DEFAULT (CAST(1.24341496E8 AS MONEY)) NOT IN (CAST(0.9226671 AS MONEY), CAST(0.06777053 AS MONEY)), FORCE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, SET WITHOUT CLUSTER, ALTER c0  SET(n_distinct=1, n_distinct_inherited=0.1), OWNER TO CURRENT_USER, REPLICA IDENTITY NOTHING, SET LOGGED, ADD CONSTRAINT h FOREIGN KEY (c0) REFERENCES t4(c0) ON DELETE NO ACTION ON UPDATE RESTRICT NOT VALID, ALTER c0  RESET(n_distinct), ALTER c0 SET STORAGE EXTENDED;
ALTER TABLE  ONLY t4 ALTER c0 SET NOT NULL, FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, REPLICA IDENTITY DEFAULT, OWNER TO SESSION_USER, SET UNLOGGED, ENABLE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, ALTER c0  SET(n_distinct_inherited=-0.2), ALTER c0 SET STATISTICS 2482, ALTER c0  RESET(n_distinct, n_distinct_inherited), NO FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ADD CONSTRAINT y FOREIGN KEY (c0) REFERENCES t2(c0) ON DELETE SET DEFAULT ON UPDATE NO ACTION NOT VALID, NOT OF, ALTER c0 SET STORAGE MAIN;
ALTER TABLE  ONLY t3 NOT OF, SET WITHOUT OIDS, FORCE ROW LEVEL SECURITY, OWNER TO CURRENT_USER, ALTER c0 SET STATISTICS 4601, SET WITHOUT CLUSTER, REPLICA IDENTITY FULL, VALIDATE CONSTRAINT asdf;
ALTER TABLE  ONLY t0 DISABLE ROW LEVEL SECURITY, ALTER c0 SET STORAGE MAIN, FORCE ROW LEVEL SECURITY, ADD CONSTRAINT 늼 CHECK(t0.c0), NO FORCE ROW LEVEL SECURITY;
ALTER TABLE  ONLY t3 NOT OF, NO FORCE ROW LEVEL SECURITY;
COMMIT;
SET SESSION statement_timeout = 5000;
