DROP DATABASE IF EXISTS database1081;
CREATE DATABASE database1081  TEMPLATE template0;
CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 FLOAT , UNIQUE(c0), CHECK(((t0.c0)>(CAST(0.183206283768261979361113844788633286952972412109375 AS INT)))), EXCLUDE (c0 timestamp_ops DESC NULLS LAST WITH <, c0 ASC WITH <, c0 int2_bloom_ops ASC NULLS LAST WITH +) WHERE (pg_is_other_temp_schema())) PARTITION BY LIST((0.858735805342516)timestamptz_ops) WITH (autovacuum_vacuum_cost_delay=34, parallel_workers=441, autovacuum_freeze_min_age=327189349, autovacuum_vacuum_threshold=2084819367, autovacuum_analyze_scale_factor=0, autovacuum_analyze_threshold=1415143609) ON COMMIT DELETE ROWS ;
CREATE TEMP TABLE t0(c0 serial , c1 FLOAT ) PARTITION BY HASH((0.60022366)) WITH (autovacuum_analyze_scale_factor=0.2) ON COMMIT PRESERVE ROWS ;
CREATE TEMPORARY TABLE t0(c0 BIT VARYING(305)  PRIMARY KEY, c1 int4range , c2 FLOAT , EXCLUDE ((0.071304146356127251493717267294414341449737548828125) timestamp_minmax_ops WITH -) WITH (autovacuum_freeze_table_age=837298674, autovacuum_freeze_max_age=1751136444, autovacuum_enabled=0, autovacuum_freeze_min_age=606260827) WHERE (NOT (((((((t0.c1)*(t0.c1)))*(((t0.c1)-(t0.c1)))))>(t0.c1))))) PARTITION BY HASH((0.60022366)timestamptz_bloom_ops, (upper(t0.c1)), (CAST(CAST(0.5604025 AS MONEY) AS INT))box_ops) WITH (fillfactor=78, autovacuum_analyze_scale_factor=0.9, autovacuum_vacuum_threshold=2147322298, autovacuum_enabled=1, autovacuum_vacuum_cost_limit=5176, autovacuum_vacuum_scale_factor=0, autovacuum_freeze_min_age=707422023, autovacuum_freeze_max_age=758480965, autovacuum_freeze_table_age=544787884, parallel_workers=279, autovacuum_vacuum_cost_delay=10);
CREATE TABLE t0(c0 money , c1 REAL  PRIMARY KEY CHECK (isempty(((range_merge((('[-115340078,-115340078]'::int4range)-('[-514295706,1627221347)'::int4range)), (('(-115340078,1326398789]'::int4range)*('[-360354789,1825719772]'::int4range))))*((((('[-1624671091,314977642)'::int4range)*('(-599130228,1618124487]'::int4range)))*((('(1326398789,1627221347)'::int4range)-('(167609368,1114832252)'::int4range)))))))) DEFAULT (0.8210763) UNIQUE, UNIQUE(c0, c1), CHECK(CAST((((((('1825719772')||('8')))||((-399174184)::INT)))||((((('(474703838,1625346888)'::int4range)-('(-1370695320,1478864703]'::int4range)))-((('[161809896,1478864703]'::int4range)*('[-399174184,71463552]'::int4range)))))) AS BOOLEAN))) PARTITION BY LIST(('4.210.106.220')range_ops) WITH (autovacuum_freeze_max_age=992690549, autovacuum_vacuum_threshold=1751484332);
CREATE TABLE IF NOT EXISTS t0(c0 boolean  PRIMARY KEY UNIQUE NOT NULL DEFAULT (((((((('[-1476923538,875948603)'::int4range)*('(-1459463051,-514295706)'::int4range)))*((('(866748956,1877134666)'::int4range)-('[-599130228,617329265]'::int4range)))))&<((((('(-478642326,953044659]'::int4range)*('[-1733804880,-1552231722)'::int4range)))*((('(-1369516995,-942432169]'::int4range)*('[617329265,1114832252]'::int4range))))))) IS FALSE), EXCLUDE (c0 array_ops DESC WITH >=), CHECK(t0.c0));
CREATE TABLE t0(c0 inet , c1 money  PRIMARY KEY NULL);
CREATE TEMP TABLE IF NOT EXISTS t1(LIKE t0);
CREATE TEMP TABLE IF NOT EXISTS t2(c0 TEXT , c1 money , CHECK(((((((('(-927956643,169788719]'::int4range)-('[991046624,1615054787)'::int4range)))-((('[474703838,1618124487)'::int4range)*('[-927956643,1615054787]'::int4range)))))*((((('[-556462332,1706472110]'::int4range)*('(-1661439235,-927956643)'::int4range)))*((('(-833960990,875948603]'::int4range)*('(-1305561217,875948603)'::int4range)))))))::BOOLEAN), FOREIGN KEY (c1, c0) REFERENCES t1(c1, c0) ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE) PARTITION BY RANGE((t2.c0)timetz_ops, (0.3624895634581102310534106436534784734249114990234375)tid_minmax_multi_ops, ((t2.c0 COLLATE "en_US.utf8")), (0.81022417205422347930010573691106401383876800537109375)) WITH (autovacuum_vacuum_cost_delay=59, autovacuum_vacuum_cost_limit=1680);
CREATE TABLE t2(c0 inet  UNIQUE DEFAULT ('153.95.31.127') NULL CHECK (((((('')||(0.5604025)))||('232.220.140.28')))::VARCHAR(672)~*CAST(0.42805431176508601520680485919001512229442596435546875 AS VARCHAR)) NO INHERIT, c1 REAL  NOT NULL PRIMARY KEY) INHERITS(t1) PARTITION BY HASH((0.5604025166495901), ((0.24315738459144853322868584655225276947021484375)::INT)oidvector_ops) WITH (autovacuum_enabled=1, parallel_workers=80, autovacuum_vacuum_cost_delay=26, autovacuum_freeze_table_age=1098761175);
CREATE TABLE IF NOT EXISTS t2(c0 inet , c1 FLOAT  NOT NULL PRIMARY KEY, FOREIGN KEY (c1) REFERENCES t1(c0) ON DELETE RESTRICT ON UPDATE SET DEFAULT NOT DEFERRABLE, EXCLUDE (c1 ASC WITH @>, c1 inet_ops NULLS LAST WITH +, c0 NULLS FIRST WITH >=, (t2.c0) bytea_bloom_ops DESC NULLS LAST WITH ~*) WHERE ((upper((('')||('(-927956643,262308466)'::int4range))) SIMILAR TO (('7')||(((0.5604025166495901)IS NOT DISTINCT FROM(t2.c1))))))) WITH (autovacuum_analyze_scale_factor=0.1, autovacuum_enabled=1, fillfactor=20, autovacuum_freeze_table_age=1515814292, autovacuum_vacuum_threshold=1252711978, autovacuum_vacuum_scale_factor=1.0E-5, autovacuum_vacuum_cost_delay=74, autovacuum_vacuum_cost_limit=6641, autovacuum_freeze_min_age=920695592, autovacuum_analyze_threshold=1545679636, parallel_workers=296, autovacuum_freeze_max_age=839054972);
CREATE TEMP TABLE IF NOT EXISTS t2(c0 DECIMAL , c1 money  PRIMARY KEY NULL CHECK ((upper('') COLLATE "en_US.utf8")!~*'ZW')) WITH (autovacuum_vacuum_cost_limit=5596, autovacuum_freeze_max_age=879491446, autovacuum_freeze_min_age=559230239, autovacuum_enabled=1, autovacuum_analyze_threshold=1322258551, parallel_workers=785, autovacuum_vacuum_threshold=1880565910, autovacuum_freeze_table_age=34215329, autovacuum_vacuum_scale_factor=0, autovacuum_vacuum_cost_delay=62, fillfactor=41);
CREATE TEMP TABLE t3(c0 DECIMAL , EXCLUDE (c0 NULLS LAST WITH |, ((0.15355682)::MONEY) numeric_minmax_ops DESC NULLS FIRST WITH <<) WHERE (((lower('	2t<<'))LIKE(((convert_from('', 'LATIN1'))||(0.7796326))))), PRIMARY KEY(c0) WITH (autovacuum_vacuum_threshold=357108982, parallel_workers=938, autovacuum_vacuum_scale_factor=0.9, autovacuum_enabled=1, autovacuum_freeze_min_age=151614836, autovacuum_analyze_threshold=796249168, autovacuum_vacuum_cost_delay=32, autovacuum_freeze_table_age=1701366139, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_vacuum_cost_limit=1717, autovacuum_freeze_max_age=273753999), FOREIGN KEY (c0) REFERENCES t1(c1) ON UPDATE NO ACTION, UNIQUE(c0)) INHERITS(t0, t2, t1) WITH (autovacuum_vacuum_cost_limit=7625, autovacuum_freeze_max_age=12634501, autovacuum_enabled=1, autovacuum_analyze_scale_factor=1.0E-5, parallel_workers=157, autovacuum_freeze_min_age=297564517, autovacuum_vacuum_scale_factor=1.0E-5, fillfactor=66, autovacuum_vacuum_cost_delay=42, autovacuum_analyze_threshold=6545532, autovacuum_freeze_table_age=744015284, autovacuum_vacuum_threshold=344799149) ON COMMIT DROP ;
CREATE UNLOGGED TABLE t3(c0 int4range  NOT NULL) INHERITS(t0, t2) PARTITION BY RANGE((family('124.95.102.195'))) WITH (fillfactor=14, parallel_workers=630, autovacuum_vacuum_cost_limit=3746, autovacuum_vacuum_threshold=1281120255, autovacuum_analyze_scale_factor=0.8, autovacuum_analyze_threshold=134803396, autovacuum_enabled=0, autovacuum_freeze_table_age=803779142, autovacuum_freeze_max_age=531267326, autovacuum_vacuum_cost_delay=65);
CREATE TEMP TABLE IF NOT EXISTS t3(c0 int4range  PRIMARY KEY NOT NULL) ON COMMIT PRESERVE ROWS ;
DROP INDEX IF EXISTS i1, i1;
INSERT INTO t0(c0, c1) VALUES('222.106.215.93', CAST(0.36189437 AS MONEY)), ('176.216.34.6', CAST(0.6909449 AS MONEY)), ('88.31.56.152', CAST(0.37616515 AS MONEY)), ('23.47.6.23', CAST(((0.5312419)::MONEY)::INT AS MONEY)), ('0.215.113.216', (0.84529597)::MONEY), ('127.195.7.7', (1.11483226E9)::MONEY);
INSERT INTO t1(c1, c0) VALUES((0.57938176)::MONEY, '28.47.67.69');
CREATE SEQUENCE IF NOT EXISTS seq AS bigint NO MINVALUE NO MAXVALUE START 1607169735 CACHE 3915792658315943958;
RESET ALL;
INSERT INTO t3(c0) VALUES((((((((('[-9223372036854775808,1837925423)'::int4range)*('[-234640006,857597779)'::int4range)))-((('[-514295706,5473672]'::int4range)-('[-1151334183,-437175212)'::int4range)))))*((((('[1706472110,3915792658315943958)'::int4range)*('[531318315,866748956]'::int4range)))*((('(-1554682658,222235178]'::int4range)*('[-1618489016,912051159]'::int4range)))))))*(range_merge((((('[-15079527,1326398789)'::int4range)*('[-490906365,140696143]'::int4range)))*((('[907241387,1068204250]'::int4range)-('[-858527801,1879461195)'::int4range)))), (((('[292018976,314977642]'::int4range)*('[-175499247,203533739]'::int4range)))*((('(-1883592249,872200006]'::int4range)*('(-1277703770,979635329)'::int4range)))))))), ((((((((('[-1927913516,-1662395088]'::int4range)*('(1110870713,1908136891)'::int4range)))*((('[746512352,1114832252)'::int4range)*('(-175499247,-15079527)'::int4range)))))*((((('(-1151334183,120447720)'::int4range)*('(-1552231722,-738970573]'::int4range)))-((('(-1151334183,643464685)'::int4range)*('(-437017809,200277282]'::int4range)))))))*((((((('(-2027680960,419462993)'::int4range)-(NULL)))-((('(-587175177,5473672)'::int4range)*('[-1153540901,-838799425)'::int4range)))))*((((('(314977642,2080438391]'::int4range)-('(-1388643297,-109392474)'::int4range)))-((('(-158668415,1877134666)'::int4range)*('(1578304225,1877134666)'::int4range)))))))));
INSERT INTO t3(c0) VALUES(((range_merge(((range_merge('(-1000010721,-175499247)'::int4range, '[-437017809,1837925423]'::int4range))-((('[-556462332,1444951883)'::int4range)-('(-321327029,1623407702]'::int4range)))), (((('[-1463296523,-1014096820)'::int4range)*('(-1859101499,-490198145)'::int4range)))*((('(56600399,1627221347]'::int4range)*('(-948958639,1618124487]'::int4range))))))*((((((('(-1534241852,-939420020)'::int4range)*('(-74519915,144876228]'::int4range)))*('[-1948148501,548830491]'::int4range)))*(CAST(('q' COLLATE "en_US.utf8") AS int4range)))))), ('[-646099721,3915792658315943958]'::int4range), ((((((((('(-1408481443,2025267802]'::int4range)*('(-1989189914,413486528)'::int4range)))*((('(-1254724939,-450374106)'::int4range)*('[-917326739,1344046173)'::int4range)))))-((((('[-1184466823,1706472110]'::int4range)*('[-1838462338,-246437065]'::int4range)))*((('[-268370916,1707704862)'::int4range)*('[-2146482769,1259872448)'::int4range)))))))-((((((('(-1657873844,1114832252]'::int4range)-('[574716536,795011753)'::int4range)))*((('[-1325042920,1139588022)'::int4range)-(NULL)))))*(((range_merge('(222235178,1930349341)'::int4range, '[-2068525578,1474079263]'::int4range))*((('[-514295706,200277282]'::int4range)*('(-393182026,881718336]'::int4range)))))))));
INSERT INTO t2(c1, c0) VALUES(CAST(1.6978872E8 AS MONEY), 0.36136340046699277905872804694809019565582275390625), (CAST(0.9541614 AS MONEY), 0.07571270078536140868408210735651664435863494873046875);
DISCARD SEQUENCES;
INSERT INTO t1(c0) VALUES('133.51.3.88') ON CONFLICT (c1) DO NOTHING;
INSERT INTO t0(c1, c0) VALUES(CAST(0.7060189 AS MONEY), '9.187.56.104'), ((0.6696942)::MONEY, '83.74.199.9');
DISCARD SEQUENCES;
INSERT INTO t3(c0) VALUES('[-2062196541,-289475349)'::int4range), ('(-2139061658,1113442764)'::int4range), ('(-2006367824,531318315]'::int4range);
INSERT INTO t1(c1, c0) VALUES((9.0724141E8)::MONEY, '129.121.129.74'), ((0.22446865)::MONEY, '218.208.212.43'), (CAST(0.6564062 AS MONEY), '191.227.165.176');
INSERT INTO t0(c0) VALUES('197.186.119.122');
INSERT INTO t0(c0) VALUES('96.63.95.87');
INSERT INTO t0(c0) VALUES('171.181.0.195'), ('88.39.212.224');
INSERT INTO t1(c1, c0) VALUES(CAST(0.6894995 AS MONEY), '247.127.116.232'), ((1.87713472E9)::MONEY, '19.196.31.114'), (CAST(0.71182853 AS MONEY), '216.243.199.156'), ((0.6787944)::MONEY, '136.215.32.102');
INSERT INTO t1(c1) VALUES(CAST(0.18172541 AS MONEY)), ((0.95331633)::MONEY);
LISTEN asdf;
TRUNCATE t3, t1 CONTINUE IDENTITY;
CREATE STATISTICS  s0 ON c0, c1 FROM t1;
INSERT INTO t2(c1, c0) OVERRIDING USER VALUE VALUES((0.5902607)::MONEY, 0.8137119632483515996312917195609770715236663818359375), (CAST(0.7073817 AS MONEY), 0.2571736243447286796026673982851207256317138671875), (CAST(1.32639885E9 AS MONEY), 0.1713103914349496381674953227047808468341827392578125) ON CONFLICT  DO NOTHING;
DELETE FROM ONLY t0 WHERE CAST(CAST(CAST((('(740097142,993724760)'::int4range)*('[-476273664,883923897]'::int4range)) AS VARCHAR(116)) AS VARCHAR(669)) AS BOOLEAN) RETURNING 0.179290901994872076130604909849353134632110595703125;
RESET ALL;
UPDATE t2 SET c0 = 0.8072970926692450976958070896216668188571929931640625, c1 = DEFAULT WHERE NOT (((0.71182853)::VARCHAR)::BOOLEAN);
UPDATE t2 SET c0 = 0.69044656609426235949200645336532033979892730712890625, c1 = CAST(0.20249328 AS MONEY) WHERE pg_is_other_temp_schema();
UPDATE t0 SET c0 = '199.23.125.126', c1 = (0.30963102)::MONEY WHERE (((((((('(-35522781,191686606)'::int4range)-('[-339595256,1784551834)'::int4range)))-(((NULL)*('[-348361293,730651461)'::int4range)))))*((((('(99502521,1674144687]'::int4range)*('[-1757857863,-919190760)'::int4range)))*((('[1618124487,2107097321]'::int4range)*('(-1731702177,553686411]'::int4range)))))))<@((((((('[-623411523,1677393305)'::int4range)*('(-1993579837,1621361151)'::int4range)))-((('(-833960990,-623016878]'::int4range)*('[-1919233239,308534244)'::int4range)))))*((((('[71463552,746512352]'::int4range)*('(1627221347,1898654484)'::int4range)))*(((NULL)-('[-1077841427,-229256563]'::int4range))))))));
CLUSTER ;
INSERT INTO t2(c0, c1) VALUES(0.92536751039630316117978736656368710100650787353515625, CAST(0.6297616 AS MONEY)), (0.44974987974668645396292276927852071821689605712890625, (8.722E8)::MONEY), (CAST(NULL AS DECIMAL), CAST(0.8117888 AS MONEY));
SET enable_indexonlyscan=1;
INSERT INTO t2(c1) VALUES((0.6894995)::MONEY);
CREATE UNIQUE INDEX i0 ON ONLY t1 USING HASH(c1) WHERE CAST(0.7060189 AS BOOLEAN);
CREATE INDEX i0 ON ONLY t0(c1, c1 DESC);
INSERT INTO t2(c0, c1) OVERRIDING USER VALUE VALUES(0.97399295763778181989067661561421118676662445068359375, CAST(0.33744305 AS MONEY));
INSERT INTO t1(c0) VALUES('11.12.19.29');
INSERT INTO t1(c1) VALUES((0.7743172)::MONEY), (CAST(0.61131996 AS MONEY));
CLUSTER ;
UPDATE t1 SET c0 = '152.232.104.176', c1 = CAST(0.5604025 AS MONEY) WHERE NOT ((lower('0.8210762861162435')) NOT IN (upper(''), (-977871039)::VARCHAR(490)));
DROP INDEX IF EXISTS i3 CASCADE;
REINDEX TABLE CONCURRENTLY t2;
INSERT INTO t0(c1) VALUES((0.35167444)::MONEY), (CAST(0.5755604 AS MONEY));
INSERT INTO t3(c0) OVERRIDING SYSTEM VALUE VALUES('[-1713471194,617329265]'::int4range);
UPDATE t3 SET c0 = (t3.c0) WHERE ((CAST(CAST(0.97951645 AS MONEY) AS VARCHAR(777)))LIKE(CAST(0.8117887787213209 AS VARCHAR(160))));
UNLISTEN *;
INSERT INTO t1(c0, c1) VALUES('209.0.87.0', CAST(0.5755604 AS MONEY));
UPDATE t2 SET c0 = (t2.c0) WHERE initcap(to_ascii('-1562834937'))~*('-2027680960' COLLATE "en_US.utf8");
UPDATE t1 SET c0 = DEFAULT, c1 = (0.07927794)::MONEY WHERE ((((1079043133)/(1102075983))) NOT IN (masklen(t1.c0), CAST('-1354153416' AS INT), ('')::INT)) IS FALSE;
UPDATE t1 SET c0 = (t1.c0), c1 = (t1.c1) WHERE ((t1.c0)<('64.65.17.205'));
INSERT INTO t0(c0, c1) VALUES('73.51.100.229', CAST(0.18673679 AS MONEY)), ('72.120.64.97', CAST(0.7796326 AS MONEY));
DISCARD TEMP;
SET LOCAL effective_cache_size=215438205;
DROP INDEX i0, i0 RESTRICT;
CREATE INDEX i0 ON ONLY t0((0.7612957505432575988635335306753404438495635986328125), c1 varchar_pattern_ops DESC, (-2.34640006E8) DESC);
CREATE INDEX i0 ON t0 USING HASH(c1);
INSERT INTO t0(c0, c1) VALUES('16.223.220.41', (0.1404886)::MONEY), ('251.24.26.106', (0.1285735)::MONEY), ('72.122.44.23', CAST(0.5989883 AS MONEY)), ('2.232.133.196', (0.20715426)::MONEY), ('203.78.85.130', CAST(0.3994381 AS MONEY)), ('127.89.7.88', (0.2351797)::MONEY);
DROP INDEX IF EXISTS i3, i1 CASCADE;
INSERT INTO t0(c0) VALUES('103.87.75.244'), ('34.139.71.106'), ('63.84.12.84') ON CONFLICT (c1) DO NOTHING;
INSERT INTO t0(c0, c1) OVERRIDING USER VALUE VALUES('232.88.191.95', ('Infinity')::MONEY), ('32.28.111.192', (0.6657451)::MONEY), ('193.216.210.47', (0.07927794)::MONEY), ('247.83.189.158', CAST(0.3566954 AS MONEY));
INSERT INTO t0(c1) VALUES((0.3770808)::MONEY), ((0.8824678)::MONEY);
INSERT INTO t0(c0) VALUES('222.47.132.76');
INSERT INTO t0(c1, c0) VALUES((0.6564062)::MONEY, '56.187.174.185'), (CAST(0.014753225 AS MONEY), '236.2.153.6');
SET CONSTRAINTS ALL DEFERRED;
UPDATE t0 SET c1 = (0.38347813)::MONEY, c0 = '226.165.171.128' WHERE NOT ((t0.c0) BETWEEN ('1.253.202.124') AND (t0.c0));
CREATE OR REPLACE TEMPORARY RECURSIVE VIEW v0(c0) AS (SELECT (t0.c1)::INT FROM t0* WHERE TRUE LIMIT 3184130740691324019 OFFSET 55998599669708640);
CREATE TEMP RECURSIVE VIEW v0(c0) AS (SELECT ALL num_nonnulls((TRUE) NOT IN (FALSE), - (-1883592249)) FROM t0* WHERE (t0.c0) IS NOT NULL LIMIT 5380383149946883919);
COMMIT;
SET SESSION statement_timeout = 5000;
