DROP DATABASE IF EXISTS database1062;
CREATE DATABASE database1062  TEMPLATE template0;
CREATE TABLE t0(c0 FLOAT , c1 REAL  NULL CHECK ((0.9117612) BETWEEN (0.9117612) AND (t0.c1)) PRIMARY KEY) PARTITION BY RANGE((((((FALSE)::VARCHAR(344))::INT)^((((CAST('_' AS INT))::INT)*(- (ascii('0.9117612273855016'))))))), (0.08184194664560473508885252158506773412227630615234375)bit_ops, (0.9973480617001386772102478062151931226253509521484375)) WITH (parallel_workers=251, autovacuum_freeze_max_age=20983651, autovacuum_vacuum_cost_delay=62);
CREATE TEMP TABLE IF NOT EXISTS t0(c0 REAL  PRIMARY KEY UNIQUE CHECK (((0.9117612)::MONEY) NOT IN (CAST(0.59326243 AS MONEY))), c1 bigint  DEFAULT (((+ (+ (num_nulls(0.21002603))))*(inet_client_port()))) UNIQUE NOT NULL) PARTITION BY RANGE((0.2100260322366717)) WITH (autovacuum_analyze_scale_factor=0.01, autovacuum_freeze_table_age=463556315, autovacuum_enabled=1, autovacuum_analyze_threshold=2026380657, autovacuum_vacuum_threshold=1632641973, autovacuum_vacuum_cost_limit=3196, autovacuum_freeze_max_age=1198247833, fillfactor=81, autovacuum_freeze_min_age=575053708) ON COMMIT DELETE ROWS ;
CREATE UNLOGGED TABLE t0(c0 REAL , c1 REAL  DEFAULT (0.2374396) PRIMARY KEY NULL UNIQUE, CHECK(((t0.c1)>(0.43631464))), UNIQUE(c1, c0)) PARTITION BY RANGE(((substr(('f)R' COLLATE "en_US.utf8"), length('0.4363146349386934'), ((2088487103)-(2088487103))) SIMILAR TO ((CAST(num_nulls('[1860532207,2088487103)'::int4range) AS VARCHAR))||(+ (- (1480538791)))))), (+ (CAST('239.191.191.191' AS INT)))time_bloom_ops);
CREATE TEMPORARY TABLE t0(c0 boolean , c1 TEXT COLLATE "en_US.utf8" , c2 boolean  DEFAULT (FALSE), EXCLUDE (c0 ASC NULLS LAST WITH -, c2 NULLS LAST WITH &<)) WITH (autovacuum_vacuum_cost_limit=5005);
CREATE TEMP TABLE IF NOT EXISTS t0(c0 boolean  PRIMARY KEY UNIQUE, c1 REAL ) WITH (autovacuum_vacuum_scale_factor=0.8, fillfactor=63, autovacuum_vacuum_cost_delay=20, parallel_workers=181, autovacuum_vacuum_threshold=115791323, autovacuum_freeze_max_age=1678399078, autovacuum_vacuum_cost_limit=1804, autovacuum_freeze_table_age=871351362, autovacuum_freeze_min_age=505079550);
CREATE UNLOGGED TABLE IF NOT EXISTS t1(LIKE t0);
CREATE UNLOGGED TABLE IF NOT EXISTS t2(LIKE t0);
CREATE UNLOGGED TABLE IF NOT EXISTS t3(c0 smallint , c1 REAL  CHECK ((('')::VARCHAR(685) SIMILAR TO CAST(t3.c0 AS VARCHAR))), PRIMARY KEY(c1, c0), FOREIGN KEY (c1) REFERENCES t0(c0) MATCH SIMPLE NOT DEFERRABLE, EXCLUDE (((CAST(0.96163423440594508750933755436562933027744293212890625 AS VARCHAR) COLLATE "C")) ASC WITH /) WHERE ((0.0708847555903930892640119054703973233699798583984375) NOT IN (0.63454006807486240671067889707046560943126678466796875, 0.08094064913836429564497620958718471229076385498046875)), CHECK(((((('f)R' COLLATE "en_US.utf8"))||((('(68291199,801971374)'::int4range)*('[-885755734,1819309604]'::int4range)))) SIMILAR TO ((to_ascii('6|x'))||(((t3.c0)%(t3.c0)))))) IS NOT UNKNOWN));
CREATE TEMPORARY TABLE IF NOT EXISTS t3(c0 int4range , c1 DECIMAL , CHECK(NOT ((-885755734)::BOOLEAN)), FOREIGN KEY (c1, c0) REFERENCES t1(c0, c1) ON DELETE RESTRICT ON UPDATE NO ACTION NOT DEFERRABLE, EXCLUDE (((('_')||(((t3.c0)<<(((t3.c0)*(t3.c0))))))) ASC WITH <->, c1 ASC NULLS LAST WITH -), PRIMARY KEY(c1, c0)) INHERITS(t2) PARTITION BY LIST(((0.73155344)::MONEY)) WITH (autovacuum_analyze_scale_factor=0.8, autovacuum_vacuum_scale_factor=0, autovacuum_freeze_min_age=636537975, autovacuum_freeze_table_age=266178073, autovacuum_analyze_threshold=204526189, autovacuum_vacuum_cost_limit=9109, autovacuum_freeze_max_age=1217709861, autovacuum_vacuum_threshold=1172352034, fillfactor=98, parallel_workers=407, autovacuum_vacuum_cost_delay=37) ON COMMIT DROP ;
CREATE UNLOGGED TABLE t3(LIKE t1);
CREATE TEMPORARY TABLE IF NOT EXISTS t4(c0 money , c1 FLOAT , FOREIGN KEY (c0, c1) REFERENCES t0(c1, c0) ON DELETE SET DEFAULT) INHERITS(t3, t1, t0) WITH (autovacuum_analyze_threshold=210691871, autovacuum_freeze_min_age=216661894, autovacuum_vacuum_scale_factor=0.01, parallel_workers=742, autovacuum_enabled=0, autovacuum_freeze_max_age=102834767, autovacuum_analyze_scale_factor=0.9, autovacuum_vacuum_threshold=579262925, autovacuum_vacuum_cost_limit=8277, autovacuum_freeze_table_age=1634651996, fillfactor=12);
CREATE TABLE IF NOT EXISTS t4(c0 DECIMAL , c1 int4range , c2 FLOAT ) INHERITS(t3, t2, t0, t1) PARTITION BY HASH((((((((((B'1111111111111111111111111111111111001011001101000111000010101010')|(B'101111111000000001100001111100')))&(((B'1111111111111111111111111111111111100000001110000010101111110111')<<(B'1111111111111111111111111111111110100110111010010000100101001111')))))|(((((B'1001001100010001101100101001100')|(B'1111111111111111111111111111111111000001000011001000001000100101')))||(((B'1101000010001111101101011100001')||(B'1111111111111111111111111111111110111101010101111111010111100101')))))))#(((((B'1101000010001111101101011100001')|(((B'1111100011110111100100010111111')#(B'1111111111111111111111111111111111110000110000110001001000101100')))))&(((((B'1111111111111111111111111111111110000110011101111100110010011000')>>(B'1101000010001111101101011100001')))||(((B'1100101100011110111011000011000')>>(B'1100101100011110111011000011000'))))))))), (t4.c1), (t4.c2)) WITH (autovacuum_vacuum_threshold=2010639935, fillfactor=33, autovacuum_enabled=0, autovacuum_vacuum_cost_delay=55, autovacuum_analyze_threshold=769643884, parallel_workers=866, autovacuum_vacuum_cost_limit=9385, autovacuum_analyze_scale_factor=0.8, autovacuum_freeze_max_age=942193775, autovacuum_vacuum_scale_factor=0, autovacuum_freeze_min_age=617114499);
CREATE TEMP TABLE t4(LIKE t0);
CREATE TEMPORARY TABLE IF NOT EXISTS t5(c0 boolean , c1 int4range  CHECK ((((-1647838055)::VARCHAR(574))||(-586900673))!~*lower(('0.4363146349386934' COLLATE "en_US.utf8"))) UNIQUE, c2 inet  UNIQUE NULL) ON COMMIT DELETE ROWS ;
UPDATE t5 SET c2 = '194.155.56.37', c0 = FALSE, c1 = '[1075110112,1966189930]'::int4range WHERE (CAST(CAST(t5.c0 AS INT) AS VARCHAR) SIMILAR TO lower((-885755734)::VARCHAR(850)));
RESET ROLE;
CREATE INDEX i0 ON ONLY t0 USING BTREE(c0);
RESET ROLE;
SET LOCAL parallel_leader_participation=0;
CLUSTER t0;
CLUSTER t3;
CLUSTER t0;
CLUSTER ;
DELETE FROM ONLY t0 WHERE t0.c0;
INSERT INTO t1(c1) VALUES(-683143571), (0.49298720083087577) ON CONFLICT  DO NOTHING;
INSERT INTO t0(c0, c1) VALUES((0.20917819818019378619311510192346759140491485595703125) BETWEEN (0.9548231563521472065048101285356096923351287841796875) AND (0.36975206501470114783813869507866911590099334716796875), 0.16267533362289355), (split_part(((('d')||(B'1101110100011010000000000100000')) COLLATE "en_US.utf8"), -2038969192)~(((0.047040861885221385563227158854715526103973388671875)::VARCHAR)||('224.167.124.43')), pg_trigger_depth()) ON CONFLICT (c1) DO NOTHING;
INSERT INTO t1(c0, c1) VALUES((((((((B'1111111111111111111111111111111110100110111010010000100101001111')||(B'1111111111111111111111111111111110100101101001110100111100111010')))&(((B'1111111111111111111111111111111111111100000010010001110100101001')<<(B'1111111111111111111111111111111111111100000010010001110100101001')))))&(((((B'1100011110010000101111010000')||(B'1111111111111111111111111111111110000011010001110101100000100110')))#(((B'1111111111111111111111111111111110011101110001111111110010011001')&(B'1111111111111111111111111111111110100110101010000010111011110111'))))))) BETWEEN (((((((B'10101011111111101111101011000')|(B'1111111111111111111111111111111110111101010101111111010111100101')))#(((B'1111111111111111111111111111111111111001100010101001101010100110')&(B'1110011001011110110011000000001')))))||(((((B'1111111111111111111111111111111111111010010111000101010111011100')>>(B'1111111111111111111111111111111111111111111111111111111111111111')))&(((B'1111111111111111111111111111111111000111101001010110111001011111')>>(B'101010111111101011111010110100'))))))) AND (((B'1101110100011010000000000100000')&(((((B'1111111111111111111111111111111111011101000001001001101100111111')&(B'1101000010001111101101011100001')))&(((B'1110010011010100000110010011001')|(B'11000010111110010100100000101'))))))), 0.16267533362289355);
INSERT INTO t0(c1) VALUES('-Infinity'), (0.2374396038315153);
CREATE STATISTICS  IF NOT EXISTS s0 ON c0, c1 FROM t1;
INSERT INTO t1(c0) VALUES(FALSE), (TRUE);
RESET ROLE;
NOTIFY test, 'çŸ´';
CLUSTER ;
CREATE STATISTICS  s1 (dependencies, ndistinct, mcv) ON c1, c0 FROM t2;
UPDATE t0 SET c1 = DEFAULT WHERE t0.c0;
RESET ROLE;
CREATE STATISTICS  s2 (dependencies) ON c0, c2 FROM t5;
TRUNCATE t5, t4, t0 RESTART IDENTITY CASCADE;
INSERT INTO t2(c1, c0) VALUES(0.9117612273855016, FALSE), (num_nonnulls((((('[-1289450214,-443450062]'::int4range)*('[-533189641,1741456916]'::int4range)))-((('[-1465782877,-946297180)'::int4range)*('[-1594898488,298638005)'::int4range))))), TRUE);
UNLISTEN *;
COMMIT;
SET SESSION statement_timeout = 5000;
