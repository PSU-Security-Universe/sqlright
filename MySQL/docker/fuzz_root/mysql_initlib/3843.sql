drop table if exists t1, t2;
CREATE TABLE t1 (a int);
CREATE OR REPLACE VIEW v1 AS SELECT * FROM t1;
ALTER TABLE t1 EXCHANGE PARTITION p0 WITH TABLE v1;
DROP VIEW v1;
DROP TABLE t1;
CREATE TABLE t1 (a INT, b INT, PRIMARY KEY (a,b)) PARTITION BY KEY(a, b, a);
CREATE TABLE t1 (a INT, b INT, PRIMARY KEY (a,b)) PARTITION BY KEY(A, b);
DROP TABLE t1;
CREATE TABLE t1 (a INT, b INT, PRIMARY KEY (a,b)) PARTITION BY KEY(a, b, A);
CREATE TABLE t1 (a VARBINARY(10)) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
CREATE TABLE t1 (a CHAR(10)) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
CREATE TABLE t1 (a TIMESTAMP) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
CREATE TABLE t1 (a DATE) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
INSERT IGNORE INTO t1 VALUES ('test'),('a'),('5');
SHOW WARNINGS;
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
INSERT IGNORE INTO t1 VALUES ('test'),('a'),('5');
SHOW WARNINGS;
DROP TABLE t1;
CREATE TABLE t1 (a TIME) PARTITION BY RANGE (DAYOFWEEK(a)) (PARTITION a1 VALUES LESS THAN (60));
SHOW WARNINGS;
CREATE TABLE t1 (a TIME) PARTITION BY HASH (TO_DAYS(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (TO_DAYS(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (TO_DAYS(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (TO_DAYS(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (TO_DAYS(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (DAYOFMONTH(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (DAYOFMONTH(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (DAYOFMONTH(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (DAYOFMONTH(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (DAYOFMONTH(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (MONTH(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (MONTH(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (MONTH(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (MONTH(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (MONTH(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (DAYOFYEAR(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (DAYOFYEAR(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (DAYOFYEAR(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (DAYOFYEAR(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (DAYOFYEAR(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (HOUR(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATE) PARTITION BY HASH (HOUR(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (HOUR(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (HOUR(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (HOUR(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (MINUTE(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATE) PARTITION BY HASH (MINUTE(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (MINUTE(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (MINUTE(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (MINUTE(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (QUARTER(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (QUARTER(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (QUARTER(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (QUARTER(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (QUARTER(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (SECOND(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATE) PARTITION BY HASH (SECOND(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (SECOND(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (SECOND(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (SECOND(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (YEARWEEK(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (YEARWEEK(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (YEARWEEK(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (YEARWEEK(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (YEARWEEK(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (WEEKDAY(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (WEEKDAY(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (WEEKDAY(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (WEEKDAY(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (WEEKDAY(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (TO_SECONDS(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (TO_SECONDS(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (TO_SECONDS(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (TO_SECONDS(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (TO_SECONDS(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (TIME_TO_SEC(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATE) PARTITION BY HASH (TIME_TO_SEC(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (TIME_TO_SEC(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (TIME_TO_SEC(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (TIME_TO_SEC(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (FROM_DAYS(a));
CREATE TABLE t1 (a DATE) PARTITION BY HASH (FROM_DAYS(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (FROM_DAYS(a));
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (TO_DAYS(FROM_DAYS(a)));
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (FROM_DAYS(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (TO_DAYS(FROM_DAYS(a)));
CREATE TABLE t1 (a INT) PARTITION BY HASH (FROM_DAYS(a));
CREATE TABLE t1 (a TIME) PARTITION BY HASH (MICROSECOND(a));
DROP TABLE t1;
CREATE TABLE t1 (a DATE) PARTITION BY HASH (MICROSECOND(a));
CREATE TABLE t1 (a DATETIME) PARTITION BY HASH (MICROSECOND(a));
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(10)) PARTITION BY HASH (MICROSECOND(a));
CREATE TABLE t1 (a INT) PARTITION BY HASH (MICROSECOND(a));
