CREATE ROLE r1;
CREATE DATABASE db1;
CREATE DATABASE db2;
CREATE TABLE db1.t1 (c1 int);
CREATE TABLE db1.t2 (c1 int);
CREATE TABLE db2.t1 (c1 int);
CREATE TABLE db2.t2 (c1 int);
CREATE PROCEDURE db1.sp1() SQL SECURITY DEFINER BEGIN SELECT * FROM db1.t1; END;
CREATE PROCEDURE db2.sp1() SQL SECURITY DEFINER BEGIN SELECT * FROM db2.t1; END;
CREATE PROCEDURE test.sp1() SQL SECURITY DEFINER BEGIN SELECT * FROM db1.t1; END;
CREATE PROCEDURE db1.sp2() SQL SECURITY DEFINER BEGIN SELECT * FROM db1.t2; END;
CREATE PROCEDURE db1.sp3() SQL SECURITY INVOKER BEGIN SELECT * FROM db1.t2; END;
GRANT EXECUTE ON *.* TO r1;
SET ROLE r1;
CALL db1.sp1();
CALL db1.sp3();
REVOKE EXECUTE ON *.* FROM r1;
SET ROLE r1;
CALL db1.sp1();
GRANT EXECUTE ON db1.* TO r1;
CALL db1.sp1();
CALL db1.sp2();
CALL db2.sp1();
CALL db1.sp3();
REVOKE EXECUTE ON db1.* FROM r1;
GRANT EXECUTE ON PROCEDURE db1.sp1 TO r1;
CALL db1.sp1();
CALL db1.sp2();
CALL db2.sp1();
CALL db1.sp3();
GRANT EXECUTE, SELECT ON db1.* TO r1;
CALL db1.sp3();
CREATE SCHEMA world;
USE world;
CREATE PROCEDURE world.proc_empty() BEGIN END;
CREATE FUNCTION world.func_plusone(i int) RETURNS INT DETERMINISTIC RETURN i+1;
CREATE FUNCTION world.func_plustwo(i int) RETURNS INT DETERMINISTIC RETURN i+2;
CREATE ROLE r_worldrou;
GRANT EXECUTE ON PROCEDURE world.proc_empty TO r_worldrou;
GRANT EXECUTE ON FUNCTION world.func_plusone TO r_worldrou;
SELECT CURRENT_ROLE();
CALL world.proc_empty();
SELECT world.func_plusone(1);
SELECT world.func_plustwo(1);
DROP SCHEMA world;
DROP ROLE r_worldrou;
DROP DATABASE db1;
DROP DATABASE db2;
DROP ROLE r1;
DROP PROCEDURE test.sp1;
