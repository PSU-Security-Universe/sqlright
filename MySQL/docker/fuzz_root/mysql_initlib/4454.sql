SET optimizer_switch = 'subquery_to_derived=on';
CREATE TABLE t1(a INT);
CREATE TABLE t2(a INT);
INSERT INTO t1 VALUES(1), (2), (3), (4);
INSERT INTO t2 VALUES(1), (2);
CREATE TABLE t0 AS SELECT *FROM t1;
CREATE TABLE t3(a INT, b INT);
INSERT INTO t3 VALUES(1, 3), (2, 3);
ANALYZE TABLE t1, t2, t0, t3;
SELECT * FROM t1 WHERE(SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE(SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
SELECT * FROM t1 WHERE(SELECT b FROM t3 WHERE t3.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE(SELECT b FROM t3 WHERE t3.a = t1.a) > 0;
SELECT * FROM t1 WHERE(SELECT ABS(a) FROM t2 WHERE t2.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE(SELECT ABS(a) FROM t2 WHERE t2.a = t1.a) > 0;
SELECT * FROM t2 WHERE(SELECT a FROM t3 WHERE t3.a = t2.a AND t3.b = t2.a) > 0;
EXPLAIN SELECT * FROM t2 WHERE(SELECT a FROM t3 WHERE t3.a = t2.a AND t3.b = t2.a) > 0;
SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a > t3.a) > 0;
EXPLAIN SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a > t3.a) > 0;
SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a != t3.a) > 0;
EXPLAIN SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a != t3.a) > 0;
INSERT INTO t2 VALUES(NULL),(NULL);
INSERT INTO t3 VALUES(NULL, 3);
SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a <=> t3.a);
EXPLAIN SELECT * FROM t3 WHERE(SELECT a FROM t2 WHERE t2.a <=> t3.a);
DELETE FROM t2 WHERE a IS NULL;
DELETE FROM t3 WHERE a IS NULL;
SELECT a, (SELECT SUM(a) + t3.b FROM t2) FROM t3;
EXPLAIN SELECT a, (SELECT SUM(a) + t3.b FROM t2) FROM t3;
SELECT a, (SELECT SUM(a) OVER w FROM t2 WINDOW w AS(ORDER BY t3.a) LIMIT 1) FROM t3;
EXPLAIN SELECT a, (SELECT SUM(a) OVER w FROM t2 WINDOW w AS(ORDER BY t3.a) LIMIT 1) FROM t3;
SELECT a FROM t2 WHERE(SELECT SUM(b) FROM t3 GROUP BY a, t2.a LIMIT 1) > 0;
EXPLAIN SELECT a FROM t2 WHERE(SELECT SUM(b) FROM t3 GROUP BY a, t2.a LIMIT 1) > 0;
SELECT a FROM t2 WHERE (SELECT SUM(b) FROM t3 GROUP BY a HAVING SUM(b) > t2.a LIMIT 1) > 0;
EXPLAIN SELECT a FROM t2 WHERE (SELECT SUM(b) FROM t3 GROUP BY a HAVING SUM(b) > t2.a LIMIT 1) > 0;
SELECT a,  (SELECT t2.a FROM t2 ORDER BY t1.a LIMIT 1) FROM t1;
EXPLAIN SELECT a,  (SELECT t2.a FROM t2 ORDER BY t1.a LIMIT 1) FROM t1;
SELECT SUM(a), a, (SELECT MIN(a) FROM t2 WHERE a = COUNT(*)) FROM t1 GROUP BY a;
EXPLAIN SELECT SUM(a), a, (SELECT MIN(a) FROM t2 WHERE a = COUNT(*)) FROM t1 GROUP BY a;
SELECT SUM(a), a, (SELECT MIN(a) FROM t2 WHERE a = AVG(t1.a)) FROM t1 GROUP BY a;
EXPLAIN SELECT SUM(a), a, (SELECT MIN(a) FROM t2 WHERE a = AVG(t1.a)) FROM t1 GROUP BY a;
INSERT INTO t2 VALUES (2);
SELECT * FROM t1 WHERE (SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE (SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
SET optimizer_switch = 'subquery_to_derived=default';
SELECT * FROM t1 WHERE (SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE (SELECT a FROM t2 WHERE t2.a = t1.a) > 0;
SET optimizer_switch = 'subquery_to_derived=on';
SELECT * FROM t1 WHERE (SELECT COUNT(a) FROM t2 WHERE t2.a = t1.a) > 0;
EXPLAIN SELECT * FROM t1 WHERE (SELECT COUNT(a) FROM t2 WHERE t2.a = t1.a) > 0;
SELECT * FROM t1 WHERE (SELECT COUNT(a) FROM t3 WHERE t3.a = t1.a GROUP BY b) > 0;
EXPLAIN SELECT * FROM t1 WHERE (SELECT COUNT(a) FROM t3 WHERE t3.a = t1.a GROUP BY b) > 0;
create table p(p_pkey int primary key);
create table l(l_pkey int, l_quantity int);
insert into p values (10), (20), (30), (40);
insert into l values (10, 100), (10, 10), (20, 200), (10, 1);
SET optimizer_switch = 'subquery_to_derived=on';
select * from l, p where p_pkey = l_pkey and l_quantity < (select 0.9 * avg(l_quantity) from l where l_pkey = p_pkey);
EXPLAIN select * from l, p where p_pkey = l_pkey and l_quantity < (select 0.9 * avg(l_quantity) from l where l_pkey = p_pkey);
DROP TABLE p, l;
DROP TABLE t0, t1, t2, t3;
CREATE TABLE t2 (a INT, b INT);
CREATE TABLE t4 (a INT NOT NULL, b INT NOT NULL);
INSERT INTO t2 VALUES (1, 7), (2, 7), (2,10);
INSERT INTO t4 VALUES (4, 8), (3, 8), (5, 9), (12, 7), (1, 7), (10, 9), (9, 6), (7, 6), (3, 9), (1, 10);
ANALYZE TABLE t2, t4;
SELECT b, MAX(a) AS ma FROM t4 GROUP BY b HAVING ma < (SELECT MAX(t2.a) FROM t2 WHERE t2.b=t4.b);
EXPLAIN SELECT b, MAX(a) AS ma FROM t4 GROUP BY b HAVING ma < (SELECT MAX(t2.a) FROM t2 WHERE t2.b=t4.b);
DROP TABLE t2, t4;
CREATE TABLE t1 (a INT PRIMARY KEY);
CREATE TABLE t2 (a INT PRIMARY KEY, b INT);
CREATE TABLE t3 (c INT);
INSERT INTO t1 (a) VALUES (1), (2);
INSERT INTO t2 (a,b) VALUES (1,2), (2,3);
INSERT INTO t3 (c) VALUES (1), (2);
ANALYZE TABLE t1, t2, t3;
SELECT (SELECT t1.a FROM t1, t2 WHERE t1.a = t2.b AND t2.a = t3.c ORDER BY t1.a) FROM t3;
EXPLAIN SELECT (SELECT t1.a FROM t1, t2 WHERE t1.a = t2.b AND t2.a = t3.c ORDER BY t1.a) FROM t3;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (a INT, b INT, c INT DEFAULT 0);
INSERT INTO t1 (a, b) VALUES (3,3), (2,2), (3,3), (2,2), (3,3), (4,4);
CREATE TABLE t2 SELECT DISTINCT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT t1.a, SUM(t1.b) FROM t1 WHERE t1.a = (SELECT t2.a FROM t2 WHERE t2.a > (SELECT t1.b FROM DUAL) AND t1.a=t2.a) GROUP BY t1.a ORDER BY t1.a LIMIT 30;
EXPLAIN SELECT t1.a, SUM(t1.b) FROM t1 WHERE t1.a = (SELECT t2.a FROM t2 WHERE t2.a > (SELECT SUM(t1.b) FROM DUAL) AND t1.a=t2.a) GROUP BY t1.a ORDER BY t1.a LIMIT 30;
EXPLAIN SELECT t1.a, SUM(t1.b) FROM t1 WHERE t1.a = (SELECT SUM(t2.b) FROM t2 WHERE t2.a > 4 ORDER BY t1.b) GROUP BY t1.a ORDER BY t1.a LIMIT 30;
DROP TABLES t1, t2;
CREATE TABLE t1 ( id INTEGER NOT NULL , contract_id INTEGER DEFAULT NULL, datestamp DATETIME DEFAULT NULL, PRIMARY KEY (id), KEY contract_id (contract_id), KEY idx_datestamp (datestamp) );
INSERT INTO t1 VALUES (1,2,'2006-09-18 09:07:53'), (2,3,'2006-09-18 09:07:53'), (3,4,'2006-09-18 09:07:53'), (4,10,'2006-09-18 09:07:53'), (5,7,'2006-09-18 09:07:53'), (6,5,'2006-09-18 09:07:53'), (7,9,'2006-09-18 09:07:53'), (8,10,'2006-09-18 09:07:53'), (9,10,'2006-09-18 09:07:53'), (10,6,'2014-09-18 09:07:53');
CREATE TABLE t2 (id INTEGER NOT NULL, PRIMARY KEY (id));
INSERT INTO t2 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
ANALYZE TABLE t1,t2;
EXPLAIN SELECT (SELECT datestamp FROM t1 WHERE contract_id = t2.id ORDER BY datestamp ASC LIMIT 1) FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1(a INT, b INT DEFAULT 0);
INSERT INTO t1(a) VALUES (1), (2);
CREATE TABLE t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
DROP TABLE t1, t2;
CREATE TABLE t_a (a INT, b INT);
INSERT INTO t_a VALUES (4, 40), (1, 10), (2, 20), (2, 20), (3, 30);
CREATE TABLE t_b SELECT DISTINCT a FROM t_a;
ANALYZE TABLE t_a, t_b;
EXPLAIN SELECT (SELECT SUM(t_b.a) OVER () FROM t_b WHERE t_b.a = t_a.a) aa, b FROM t_a GROUP BY aa, b;
DROP TABLE t_a, t_b;
CREATE TABLE t1 (id INT);
CREATE TABLE t2 (id INT);
INSERT INTO t1 VALUES (1), (2);
INSERT INTO t2 VALUES (1);
ANALYZE TABLE t1, t2;
SELECT t1.id, ( SELECT COUNT(t.id) FROM t2 AS t WHERE t.id = t1.id ) AS c FROM t1;
EXPLAIN SELECT t1.id, ( SELECT COUNT(t.id) FROM t2 AS t WHERE t.id = t1.id ) AS c FROM t1;
EXPLAIN SELECT t1.id, ( SELECT COUNT(t.id)+2 FROM t2 AS t WHERE t.id = t1.id ) AS c FROM t1;
DROP TABLE t1, t2;
CREATE TABLE t1 (a INT, b INT);
EXPLAIN SELECT COUNT(*) FROM t1 a JOIN t1 outr ON a.a = (SELECT COUNT(*) FROM t1 inr WHERE inr.a = outr.a);
DROP TABLE t1;
CREATE TABLE t1 (f1 INTEGER, f2 INTEGER);
INSERT INTO t1 VALUES (1,2);
CREATE TABLE t2 LIKE t1;
INSERT INTO t2 SELECT * FROM t1;
