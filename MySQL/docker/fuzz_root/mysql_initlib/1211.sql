drop table if exists t1, t2;
CREATE TABLE t1 ( id MEDIUMINT NOT NULL AUTO_INCREMENT, dt DATE, st VARCHAR(255), uid INT, id2nd LONGBLOB, filler VARCHAR(255), PRIMARY KEY(id, dt) );
INSERT INTO t1 (dt, st, uid, id2nd, filler) VALUES ('1991-03-14', 'Initial Insert', 200, 1234567, 'No Data'), ('1991-02-26', 'Initial Insert', 201, 1234567, 'No Data'), ('1992-03-16', 'Initial Insert', 234, 1234567, 'No Data'), ('1992-07-02', 'Initial Insert', 287, 1234567, 'No Data'), ('1991-05-26', 'Initial Insert', 256, 1234567, 'No Data'), ('1991-04-25', 'Initial Insert', 222, 1234567, 'No Data'), ('1993-03-12', 'Initial Insert', 267, 1234567, 'No Data'), ('1993-03-14', 'Initial Insert', 291, 1234567, 'No Data'), ('1991-12-20', 'Initial Insert', 298, 1234567, 'No Data'), ('1994-10-31', 'Initial Insert', 220, 1234567, 'No Data');
ALTER TABLE t1 PARTITION BY LIST (YEAR(dt)) ( PARTITION d1 VALUES IN (1991, 1994), PARTITION d2 VALUES IN (1993), PARTITION d3 VALUES IN (1992, 1995, 1996) );
INSERT INTO t1 (dt, st, uid, id2nd, filler) VALUES ('1991-07-14', 'After Partitioning Insert', 299, 1234567, 'Insert row');
UPDATE t1 SET filler='Updating the row' WHERE uid=298;
DROP TABLE t1;
CREATE TABLE t1 ( a char(2) NOT NULL, b char(2) NOT NULL, c int(10) unsigned NOT NULL, d varchar(255) DEFAULT NULL, e varchar(1000) DEFAULT NULL, PRIMARY KEY (a, b, c), KEY (a), KEY (a, b) ) /*!50100 PARTITION BY KEY (a) PARTITIONS 20 */;
INSERT INTO t1 (a, b, c, d, e) VALUES ('07', '03', 343, '1', '07_03_343'), ('01', '04', 343, '2', '01_04_343'), ('01', '06', 343, '3', '01_06_343'), ('01', '07', 343, '4', '01_07_343'), ('01', '08', 343, '5', '01_08_343'), ('01', '09', 343, '6', '01_09_343'), ('03', '03', 343, '7', '03_03_343'), ('03', '06', 343, '8', '03_06_343'), ('03', '07', 343, '9', '03_07_343'), ('04', '03', 343, '10', '04_03_343'), ('04', '06', 343, '11', '04_06_343'), ('05', '03', 343, '12', '05_03_343'), ('11', '03', 343, '13', '11_03_343'), ('11', '04', 343, '14', '11_04_343') ;
UPDATE t1 AS A, (SELECT '03' AS a, '06' AS b, 343 AS c, 'last' AS d) AS B SET A.e = B.d   WHERE A.a = '03'   AND A.b = '06'  AND A.c = 343;
DROP TABLE t1;
CREATE TABLE t1 (a VARCHAR(51) CHARACTER SET latin1) PARTITION BY KEY (a) PARTITIONS 1;
INSERT INTO t1 VALUES ('a'),('b'),('c');
analyze table t1;
EXPLAIN SELECT 1 FROM t1 WHERE a > 1;
DROP TABLE t1;
CREATE TABLE t1 (a INT NOT NULL, b INT NOT NULL) PARTITION BY KEY (a) PARTITIONS 2;
INSERT INTO t1 VALUES (0,1), (0,2);
ALTER TABLE t1 ADD PRIMARY KEY (a);
SHOW CREATE TABLE t1;
SELECT * FROM t1;
UPDATE t1 SET a = 1, b = 1 WHERE a = 0 AND b = 2;
ALTER TABLE t1 ADD PRIMARY KEY (a);
SELECT * FROM t1;
ALTER TABLE t1 DROP PRIMARY KEY;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY, name VARCHAR(16) NOT NULL, year YEAR, INDEX name (name(8)) ) PARTITION BY HASH(id) PARTITIONS 2;
INSERT INTO t1 VALUES ( 1, 'FooBar', '1924' );
CREATE TABLE t2 (id INT);
INSERT INTO t2 VALUES (1),(2);
UPDATE t1, t2 SET t1.year = '1955' WHERE t1.name = 'FooBar';
DROP TABLE t1, t2;
CREATE TABLE t1 ( `id` int NOT NULL, `user_num` int DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB CHARSET=latin1;
INSERT INTO t1 VALUES (1,8601);
INSERT INTO t1 VALUES (2,8601);
INSERT INTO t1 VALUES (3,8601);
INSERT INTO t1 VALUES (4,8601);
CREATE TABLE t2 ( `id` int(11) NOT NULL, `user_num` int DEFAULT NULL, `name` varchar(64) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB CHARSET=latin1 PARTITION BY HASH (id) PARTITIONS 2;
INSERT INTO t2 VALUES (1,8601,'John');
INSERT INTO t2 VALUES (2,8601,'JS');
INSERT INTO t2 VALUES (3,8601,'John S');
UPDATE t1, t2 SET t2.name = 'John Smith' WHERE t1.user_num = t2.user_num;
DROP TABLE t1, t2;
CREATE TABLE t1 ( ID int(11) NOT NULL, `aaaa,aaaaa` tinyint(3) UNSIGNED NOT NULL DEFAULT '0', ddddddddd int(11) NOT NULL DEFAULT '0', new_field0 varchar(50), PRIMARY KEY(ID, `aaaa,aaaaa`, ddddddddd)) PARTITION BY RANGE(ID) PARTITIONS 3 SUBPARTITION BY LINEAR KEY(ID,`aaaa,aaaaa`) SUBPARTITIONS 2 ( PARTITION p01 VALUES LESS THAN(100), PARTITION p11 VALUES LESS THAN(200), PARTITION p21 VALUES LESS THAN MAXVALUE);
SELECT PARTITION_EXPRESSION, SUBPARTITION_EXPRESSION FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_NAME='t1';
show create table t1;
drop table t1;
CREATE TABLE t1 (a INT, b INT) PARTITION BY LIST (a) SUBPARTITION BY HASH (b) (PARTITION p1 VALUES IN (1));
ALTER TABLE t1 ADD COLUMN c INT;
DROP TABLE t1;
CREATE TABLE t1 ( a int NOT NULL, b int NOT NULL);
CREATE TABLE t2 ( a int NOT NULL, b int NOT NULL, INDEX(b) ) PARTITION BY HASH(a) PARTITIONS 2;
INSERT INTO t1 VALUES (399, 22);
INSERT INTO t2 VALUES (1, 22), (1, 42);
INSERT INTO t2 SELECT 1, 399 FROM t2, t1 WHERE t1.b = t2.b;
DROP TABLE t1, t2;
CREATE TABLE t1 ( a timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, b varchar(10), PRIMARY KEY (a) ) PARTITION BY RANGE (UNIX_TIMESTAMP(a)) ( PARTITION p1 VALUES LESS THAN (1199134800), PARTITION pmax VALUES LESS THAN MAXVALUE );
INSERT INTO t1 VALUES ('2007-07-30 17:35:48', 'p1');
INSERT INTO t1 VALUES ('2009-07-14 17:35:55', 'pmax');
INSERT INTO t1 VALUES ('2009-09-21 17:31:42', 'pmax');
SELECT * FROM t1;
SELECT * FROM t1 where a between '2007-01-01' and '2007-08-01';
analyze table t1;
EXPLAIN SELECT * FROM t1 where a between '2007-01-01' and '2007-08-01';
EXPLAIN SELECT * FROM t1 where a = '2007-07-30 17:35:48';
ALTER TABLE t1 REORGANIZE PARTITION pmax INTO ( PARTITION p3 VALUES LESS THAN (1247688000), PARTITION pmax VALUES LESS THAN MAXVALUE);
SELECT * FROM t1;
SELECT * FROM t1 where a between '2007-01-01' and '2007-08-01';
analyze table t1;
EXPLAIN SELECT * FROM t1 where a between '2007-01-01' and '2007-08-01';
EXPLAIN SELECT * FROM t1 where a = '2007-07-30 17:35:48';
SHOW CREATE TABLE t1;
DROP TABLE t1;
create table t1 (a int NOT NULL, b varchar(5) NOT NULL) default charset=utf8 partition by list (a) subpartition by key (b) (partition p0 values in (1), partition p1 values in (2));
drop table t1;
create table t1 (a int, b int, key(a)) partition by list (a) ( partition p0 values in (1), partition p1 values in (2));
insert into t1 values (1,1),(2,1),(2,2),(2,3);
analyze table t1;
show indexes from t1;
analyze table t1;
show indexes from t1;
drop table t1;
create table t1 (a int) partition by hash (a);
create index i on t1 (a);
insert into t1 values (1);
insert into t1 select * from t1;
create index i on t1 (a);
create index i2 on t1 (a);
drop table t1;
CREATE TABLE t0 (a INT PRIMARY KEY);
CREATE TABLE t1 (a INT, FOREIGN KEY (a) REFERENCES t0 (a)) PARTITION BY HASH (a);
DROP TABLE t0;
CREATE TABLE t1 ( pk INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (pk) ) /*!50100 PARTITION BY HASH (pk) PARTITIONS 2 */;
INSERT INTO t1 VALUES (NULL);
INSERT INTO t1 VALUES (NULL);
INSERT INTO t1 VALUES (NULL);
SELECT * FROM t1 WHERE pk < 0 ORDER BY pk;
DROP TABLE t1;
CREATE TABLE t1 (a INT) ENGINE=NonExistentEngine;
CREATE TABLE t1 (a INT) ENGINE=NonExistentEngine PARTITION BY HASH (a);
CREATE TABLE t1 (a INT);
ALTER TABLE t1 ENGINE=NonExistentEngine;
ALTER TABLE t1 PARTITION BY HASH (a) (PARTITION p0 ENGINE=InnoDB, PARTITION p1 ENGINE=NonExistentEngine);
ALTER TABLE t1 ENGINE=NonExistentEngine;
SHOW CREATE TABLE t1;
DROP TABLE t1;
SET sql_mode='';
CREATE TABLE t1 (a INT) ENGINE=NonExistentEngine;
DROP TABLE t1;
CREATE TABLE t1 (a INT) ENGINE=NonExistentEngine PARTITION BY HASH (a);
DROP TABLE t1;
CREATE TABLE t1 (a INT);
ALTER TABLE t1 ENGINE=NonExistentEngine;
ALTER TABLE t1 PARTITION BY HASH (a) (PARTITION p0 ENGINE=InnoDB, PARTITION p1 ENGINE=NonExistentEngine);
ALTER TABLE t1 ENGINE=NonExistentEngine;
SHOW CREATE TABLE t1;
DROP TABLE t1;
SET sql_mode=DEFAULT;
CREATE TABLE t1 (a INT NOT NULL, KEY(a)) PARTITION BY RANGE(a) (PARTITION p1 VALUES LESS THAN (200), PARTITION pmax VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES (2), (40), (40), (70), (60), (90), (199);
SELECT a FROM t1 WHERE a BETWEEN 60 AND 95 ORDER BY a ASC;
