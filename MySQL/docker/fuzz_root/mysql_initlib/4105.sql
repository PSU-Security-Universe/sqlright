CREATE ROLE r1;
CREATE ROLE `admin-db1`;
CREATE ROLE `admin-db2`;
CREATE ROLE `admin-db1t1`;
CREATE ROLE `admin-db2t1`;
CREATE ROLE `app-updater`;
CREATE USER `app-middleware-db1`@`localhost` IDENTIFIED BY 'foo';
CREATE USER `app-middleware-db2`@`localhost` IDENTIFIED BY 'foo';
CREATE USER `app`@`localhost` IDENTIFIED BY 'foo';
GRANT `admin-db1` TO `app-middleware-db1`@`localhost`;
GRANT `admin-db2` TO `app-middleware-db2`@`localhost`;
GRANT `app-updater` TO `app-middleware-db1`@`localhost`;
CREATE DATABASE db1;
CREATE DATABASE db2;
CREATE TABLE db1.t1 (c1 INT, c2 INT, c3 INT);
CREATE TABLE db1.t2 (c1 INT, c2 INT, c3 INT);
CREATE TABLE db2.t1 (c1 INT, c2 INT, c3 INT);
CREATE TABLE db2.t2 (c1 INT, c2 INT, c3 INT);
GRANT `admin-db2t1` TO `admin-db1`;
GRANT `admin-db1t1` TO `admin-db2`;
GRANT `admin-db1t1` TO `admin-db1` WITH ADMIN OPTION;
GRANT SELECT, UPDATE, CREATE, DROP, INSERT, DELETE ON db1.* TO `admin-db1`;
GRANT SELECT, UPDATE, CREATE, DROP, INSERT, DELETE ON db2.* TO `admin-db2`;
GRANT SELECT, UPDATE, CREATE, DROP, INSERT, DELETE ON db1.t1 TO `admin-db1t1`;
GRANT SELECT, UPDATE, CREATE, DROP, INSERT, DELETE ON db2.t1 TO `admin-db2t1`;
SET ROLE `admin-db1`;
SHOW GRANTS;
INSERT INTO db1.t1 VALUES (1,2,3);
INSERT INTO db1.t2 VALUES (1,2,3);
INSERT INTO db2.t1 VALUES (1,2,3);
SELECT * FROM db1.t1;
SELECT * FROM db1.t2;
SELECT * FROM db2.t1;
GRANT `admin-db1t1` TO `app`@`localhost`;
GRANT r1 TO `app-middleware-db1`@`localhost` WITH ADMIN OPTION;
SET ROLE `admin-db1`;
GRANT `admin-db1t1` TO `app`@`localhost`;
SHOW GRANTS FOR CURRENT_USER() USING `admin-db1`;
INSERT INTO db2.t2 VALUES (1,2,3);
SELECT * FROM db2.t2;
GRANT `admin-db2t1` TO `app`@`localhost`;
SHOW GRANTS FOR CURRENT_USER();
SET ROLE `admin-db1t1`;
SELECT CURRENT_USER(), CURRENT_ROLE();
GRANT `admin-db1t1` TO `app-middleware-db2`@`localhost`;
SELECT ExtractValue(ROLES_GRAPHML(),'count(//node)') as num_nodes;
SELECT ExtractValue(ROLES_GRAPHML(),'count(//edge)') as num_edges;
GRANT `admin-db1t1` TO `app`@`localhost` WITH ADMIN OPTION;
SET ROLE ALL;
SELECT CURRENT_USER(), CURRENT_ROLE();
GRANT `admin-db1t1` TO `app-middleware-db2`@`localhost`;
REVOKE `admin-db1t1` FROM `app-middleware-db2`@`localhost`;
GRANT `admin-db1t1` TO `app-middleware-db2`@`localhost`;
REVOKE `admin-db1t1` FROM `app`@`localhost`;
GRANT `admin-db1t1` TO `app`@`localhost`;
REVOKE `admin-db1t1` FROM `app-middleware-db2`@`localhost`;
SELECT CURRENT_USER(), CURRENT_ROLE();
SHOW GRANTS;
REVOKE `admin-db1t1` FROM `app-middleware-db2`@`localhost`;
DROP DATABASE db1;
DROP DATABASE db2;
DROP ROLE r1;
DROP ROLE `admin-db1`;
DROP ROLE `admin-db2`;
DROP ROLE `admin-db1t1`;
DROP ROLE `admin-db2t1`;
DROP ROLE `app-updater`;
DROP USER `app-middleware-db1`@`localhost`;
DROP USER `app-middleware-db2`@`localhost`;
DROP USER `app`@`localhost`;
CREATE ROLE r1;
CREATE DATABASE db1;
GRANT CREATE ON db1.* TO r1 WITH GRANT OPTION;
SET ROLE ALL;
SET ROLE NONE;
DROP ROLE r1;
DROP DATABASE db1;
CREATE ROLE r1, r2;
use test;
GRANT CREATE ON test.* TO r1;
GRANT DROP ON test.* TO r2;
SET ROLE ALL;
SHOW GRANTS;
CREATE ROLE role_admin, arbitrary_role;
GRANT ROLE_ADMIN ON *.* TO role_admin;
SET ROLE role_admin;
GRANT SELECT ON *.* TO r1;
DROP ROLE r1,r2,role_admin,arbitrary_role;
CREATE USER `u1`@`%` IDENTIFIED BY 'foo';
CREATE USER `u2`@`%` IDENTIFIED BY 'foo';
CREATE ROLE r1, r2, r3;
GRANT r2 TO r1;
GRANT r3 TO r2;
GRANT r2 TO u1;
GRANT r3 TO u2;
SET ROLE all;
GRANT r1 TO u2;
GRANT r2 TO u2;
GRANT r3 TO u2;
GRANT r3 TO r2 WITH ADMIN OPTION;
SET ROLE all;
