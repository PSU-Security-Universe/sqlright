drop procedure if exists p1;
drop procedure if exists p2;
create procedure p1() begin prepare stmt from "select 1"; execute stmt; execute stmt; execute stmt; deallocate prepare stmt; end;
call p1();
call p1();
call p1();
drop procedure p1;
prepare stmt from "call p1()";
set @SAVE_SP_RECURSION_LEVELS=@@max_sp_recursion_depth;
set @@max_sp_recursion_depth=100;
execute stmt;
execute stmt;
execute stmt;
call p1();
call p1();
call p1();
set @@max_sp_recursion_depth=@SAVE_SP_RECURSION_LEVELS;
call p1();
call p1();
call p1();
drop procedure p1;
create procedure p1() begin prepare stmt from "create procedure p2() begin select 1; end"; execute stmt; deallocate prepare stmt; end;
call p1();
call p1();
drop procedure p1;
create procedure p1() begin prepare stmt from "drop procedure p2"; execute stmt; deallocate prepare stmt; end;
call p1();
call p1();
drop procedure p1;
create procedure p1() begin prepare stmt_drop from "drop table if exists t1"; execute stmt_drop; prepare stmt from "create table t1 (a int)"; execute stmt; insert into t1 (a) values (1); select * from t1; prepare stmt_alter from "alter table t1 add (b int)"; execute stmt_alter; insert into t1 (a,b) values (2,1); deallocate prepare stmt_alter; deallocate prepare stmt; deallocate prepare stmt_drop; end;
call p1();
call p1();
drop procedure p1;
call p1();
call p1();
drop procedure p1;
create procedure p1() begin prepare stmt_drop from "drop table if exists t1"; execute stmt_drop; prepare stmt from "create table t1 (a int)"; execute stmt; deallocate prepare stmt; deallocate prepare stmt_drop; end;
drop function if exists f1;
select f1(0);
select f1(f1(0));
select f1(f1(f1(0)));
drop function f1;
drop procedure p1;
create procedure p1() begin drop table if exists t1; create table t1 (id integer not null primary key, name varchar(20) not null); insert into t1 (id, name) values (1, 'aaa'), (2, 'bbb'), (3, 'ccc'); prepare stmt from "select name from t1"; execute stmt; select name from t1; execute stmt; prepare stmt from "select name from t1 where name=(select name from t1 where id=2)"; execute stmt; select name from t1 where name=(select name from t1 where id=2); execute stmt; end;
call p1();
call p1();
drop procedure p1;
prepare stmt from "select * from t1";
create procedure p1() begin execute stmt; deallocate prepare stmt; end;
call p1();
call p1();
drop procedure p1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create procedure p1() begin declare a char(10); set a="sp-variable"; set @a="mysql-variable"; prepare stmt from "select 'dynamic sql:', @a, a"; execute stmt; end;
call p1();
call p1();
drop procedure p1;
SET sql_mode = default;
create procedure p1() begin prepare stmt from 'select ? as a'; execute stmt using @a; end;
set @a=1;
call p1();
call p1();
drop procedure p1;
drop table if exists t1;
drop table if exists t2;
create table t1 (id integer primary key auto_increment, stmt_text char(35), status varchar(20));
insert into t1 (stmt_text) values ("select 1"), ("flush tables"), ("handler t1 open as ha"),  ("analyze table t1"), ("check table t1"), ("checksum table t1"), ("check table t1"), ("optimize table t1"), ("repair table t1"), ("describe extended select * from t1"), ("help help"), ("show databases"), ("show tables"), ("show table status"), ("show open tables"), ("show storage engines"), ("insert into t1 (id) values (1)"), ("update t1 set status=''"), ("delete from t1"), ("truncate t1"), ("call p1()"), ("foo bar"), ("create view v1 as select 1"), ("alter view v1 as select 2"), ("drop view v1"),("create table t2 (a int)"),("alter table t2 add (b int)"), ("drop table t2");
call p1();
select * from t1;
drop procedure p1;
drop table t1;
prepare stmt from 'select 1';
create procedure p1() execute stmt;
call p1();
call p1();
drop procedure p1;
create function f1() returns int begin deallocate prepare stmt; return 1; end;
create procedure p1() begin prepare stmt from 'select 1 A'; execute stmt; end;
prepare stmt from 'call p1()';
execute stmt;
execute stmt;
drop procedure p1;
drop table if exists t1, t2;
create procedure p1 (a int) language sql deterministic begin declare rsql varchar(100); drop table if exists t1, t2; set @rsql= "create table t1 (a int)"; select @rsql; prepare pst from @rsql; execute pst; set @rsql= null; set @rsql= "create table t2 (a int)"; select @rsql; prepare pst from @rsql; execute pst; drop table if exists t1, t2; end;
set @a:=0;
call p1(@a);
select @a;
call p1(@a);
select @a;
drop procedure if exists p1;
