set optimizer_switch='batched_key_access=on,mrr_cost_based=off';
DROP TABLE IF EXISTS t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11;
DROP DATABASE IF EXISTS world;
set names utf8;
CREATE DATABASE world;
use world;
CREATE TABLE country ( Code char(3) NOT NULL default '', Name char(52) NOT NULL default '', SurfaceArea float(10,2) NOT NULL default '0.00', Population int(11) NOT NULL default '0', Capital int(11) default NULL );
CREATE TABLE city ( ID int(11) NOT NULL, Name char(35) NOT NULL default '', Country char(3) NOT NULL default '', Population int(11) NOT NULL default '0' );
CREATE TABLE countrylanguage ( Country char(3) NOT NULL default '', Language char(30) NOT NULL default '', Percentage float NOT NULL default '0.0' );
ANALYZE TABLE country, city, countrylanguage;
ANALYZE TABLE city, country, countrylanguage;
SELECT COUNT(*) FROM country;
SELECT COUNT(*) FROM city;
SELECT COUNT(*) FROM countrylanguage;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
set join_buffer_size=2048;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
set join_buffer_size=default;
show variables like 'join_buffer_size';
DROP DATABASE world;
CREATE DATABASE world;
use world;
CREATE TABLE country ( Code char(3) NOT NULL default '', Name char(52) NOT NULL default '', SurfaceArea float(10,2) NOT NULL default '0.00', Population int(11) NOT NULL default '0', Capital int(11) default NULL, PRIMARY KEY  (Code), UNIQUE INDEX (Name) );
CREATE TABLE city ( ID int(11) NOT NULL auto_increment, Name char(35) NOT NULL default '', Country char(3) NOT NULL default '', Population int(11) NOT NULL default '0', PRIMARY KEY  (ID), INDEX (Population), INDEX (Country)  );
CREATE TABLE countrylanguage ( Country char(3) NOT NULL default '', Language char(30) NOT NULL default '', Percentage float NOT NULL default '0.0', PRIMARY KEY  (Country, Language), INDEX (Percentage) );
ANALYZE TABLE country, city, countrylanguage;
ANALYZE TABLE city, country, countrylanguage;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
EXPLAIN SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
EXPLAIN SELECT country.Name, IF(ISNULL(countrylanguage.country), NULL, countrylanguage.Percentage) FROM country LEFT JOIN countrylanguage ON (countrylanguage.country=country.Code AND Language='English') WHERE  country.Population > 10000000;
SELECT country.Name, IF(ISNULL(countrylanguage.country), NULL, countrylanguage.Percentage) FROM country LEFT JOIN countrylanguage ON (countrylanguage.country=country.Code AND Language='English') WHERE  country.Population > 10000000;
set join_buffer_size=256;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
EXPLAIN SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
set join_buffer_size=default;
show variables like 'join_buffer_size';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
set join_buffer_size=256;
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
set join_buffer_size=default;
ALTER TABLE country MODIFY Name varchar(52) NOT NULL default '';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
ALTER TABLE country MODIFY Name varchar(250) NOT NULL default '';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
ALTER TABLE country ADD COLUMN PopulationBar text;
UPDATE country  SET PopulationBar=REPEAT('x', CAST(Population/100000 AS unsigned int));
SELECT city.Name, country.Name, country.PopulationBar FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
set join_buffer_size=256;
SELECT city.Name, country.Name, country.PopulationBar FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
set join_buffer_size=default;
DROP DATABASE world;
use test;
CREATE TABLE t1( affiliatetometaid int  NOT NULL default '0', uniquekey int NOT NULL default '0', metaid int  NOT NULL default '0', affiliateid int  NOT NULL default '0', xml text, isactive char(1) NOT NULL default 'Y', PRIMARY KEY  (affiliatetometaid) );
CREATE UNIQUE INDEX t1_uniquekey ON t1(uniquekey);
CREATE INDEX t1_affiliateid ON t1(affiliateid);
CREATE INDEX t1_metaid on t1 (metaid);
INSERT INTO t1 VALUES (1616, 1571693233, 1391, 2, NULL, 'Y'), (1943, 1993216749, 1726, 2, NULL, 'Y');
CREATE TABLE t2( metaid int  NOT NULL default '0', name varchar(80) NOT NULL default '', dateadded timestamp NOT NULL , xml text, status int default NULL, origin int default NULL, gid int NOT NULL default '1', formattypeid int  default NULL, PRIMARY KEY  (metaid) );
CREATE INDEX t2_status ON t2(status);
CREATE INDEX t2_gid ON t2(gid);
CREATE INDEX t2_formattypeid ON t2(formattypeid);
INSERT INTO t2 VALUES (1391, "I Just Died", "2003-10-02 10:07:37", "", 1, NULL, 3, NULL), (1726, "Me, Myself & I", "2003-12-05 11:24:36", " ", 1, NULL, 3, NULL);
CREATE TABLE t3( mediaid int  NOT NULL , metaid int  NOT NULL default '0', formatid int  NOT NULL default '0', status int default NULL, path varchar(100) NOT NULL default '', datemodified timestamp NOT NULL , resourcetype int  NOT NULL default '1', parameters text, signature int  default NULL, quality int  NOT NULL default '255', PRIMARY KEY  (mediaid) );
CREATE INDEX t3_metaid ON t3(metaid);
CREATE INDEX t3_formatid ON t3(formatid);
CREATE INDEX t3_status ON t3(status);
CREATE INDEX t3_metaidformatid ON t3(metaid,formatid);
CREATE INDEX t3_signature ON t3(signature);
CREATE INDEX t3_quality ON t3(quality);
INSERT INTO t3 VALUES (6, 4, 8, 0, "010101_anastacia_spmidi.mid", "2004-03-16 13:40:00", 1, NULL, NULL, 255), (3343, 3, 8, 1, "010102_4VN4bsPwnxRQUJW5Zp1RhG2IL9vvl_8.mid", "2004-03-16 13:40:00", 1, NULL, NULL, 255);
CREATE TABLE t4( formatid int  NOT NULL , name varchar(60) NOT NULL default '', formatclassid int  NOT NULL default '0', mime varchar(60) default NULL, extension varchar(10) default NULL, priority int NOT NULL default '0', canaddtocapability char(1) NOT NULL default 'Y', PRIMARY KEY  (formatid) );
CREATE INDEX t4_formatclassid ON t4(formatclassid);
CREATE INDEX t4_formats_idx ON t4(canaddtocapability);
INSERT INTO t4 VALUES (19, "XHTML", 11, "text/html", "xhtml", 10, 'Y'), (54, "AMR (wide band)", 13, "audio/amr-wb", "awb", 0, 'Y');
CREATE TABLE t5( formatclassid int  NOT NULL , name varchar(60) NOT NULL default '', priority int NOT NULL default '0', formattypeid int  NOT NULL default '0', PRIMARY KEY  (formatclassid) );
CREATE INDEX t5_formattypeid on t5(formattypeid);
INSERT INTO t5 VALUES (11, "Info", 0, 4), (13, "Digital Audio", 0, 2);
CREATE TABLE t6( formattypeid int  NOT NULL , name varchar(60) NOT NULL default '', priority int default NULL, PRIMARY KEY  (formattypeid) );
INSERT INTO t6 VALUES (2, "Ringtones", 0);
CREATE TABLE t7( metaid int  NOT NULL default '0', artistid int  NOT NULL default '0', PRIMARY KEY  (metaid,artistid) );
INSERT INTO t7 VALUES (4, 5), (3, 4);
CREATE TABLE t8( artistid int  NOT NULL , name varchar(80) NOT NULL default '', PRIMARY KEY  (artistid) );
INSERT INTO t8 VALUES (5, "Anastacia"), (4, "John Mayer");
CREATE TABLE t9( subgenreid int  NOT NULL default '0', metaid int  NOT NULL default '0', PRIMARY KEY  (subgenreid,metaid) ) ;
CREATE INDEX t9_subgenreid ON t9(subgenreid);
CREATE INDEX t9_metaid ON t9(metaid);
INSERT INTO t9 VALUES  (138, 4), (31, 3);
CREATE TABLE t10( subgenreid int  NOT NULL , genreid int  NOT NULL default '0', name varchar(80) NOT NULL default '', PRIMARY KEY  (subgenreid) ) ;
CREATE INDEX t10_genreid ON t10(genreid);
INSERT INTO t10 VALUES  (138, 19, ''), (31, 3, '');
CREATE TABLE t11( genreid int  NOT NULL default '0', name char(80) NOT NULL default '', priority int NOT NULL default '0', masterclip char(1) default NULL, PRIMARY KEY  (genreid) ) ;
CREATE INDEX t11_masterclip ON t11( masterclip);
INSERT INTO t11 VALUES (19, "Pop & Dance", 95, 'Y'), (3, "Rock & Alternative", 100, 'Y');
ANALYZE TABLE t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
DROP TABLE t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11;
CREATE TABLE t1 (a1 int, filler1 char(64) default ' ' );
CREATE TABLE t2 ( a2 int, b2 int, filler2 char(64) default ' ',  PRIMARY KEY idx(a2,b2,filler2) ) ;
CREATE TABLE t3 (b3 int, c3 int, INDEX idx(b3));
INSERT INTO t1(a1) VALUES  (4), (7), (1), (9), (8), (5), (3), (6), (2);
INSERT INTO t2(a2,b2) VALUES (1,30), (3,40), (2,61), (6,73), (8,92), (9,27), (4,18), (5,84), (7,56), (4,14), (6,76), (8,98), (7,55), (1,39), (2,68), (3,45), (9,21), (5,81), (5,88), (2,65), (6,74), (9,23), (1,37), (3,44), (4,17), (8,99), (7,51), (9,28), (7,52), (1,33), (4,13), (5,87), (3,43), (8,91), (2,62), (6,79), (3,49), (8,93), (7,34), (5,82), (6,78), (2,63), (1,32), (9,22), (4,11);
INSERT INTO t3 VALUES (30,302), (92,923), (18,187), (45,459), (30,309),  (39,393), (68,685), (45,458), (21,210), (81,817), (40,405), (61,618), (73,738), (92,929), (27,275), (18,188), (84,846), (56,564), (14,144), (76,763),  (98,982), (55,551), (17,174), (99,998), (51,513), (28,282), (52,527), (33,336), (13,138), (87,878),  (43,431), (91,916), (62,624), (79,797), (49,494), (93,933), (34,347), (82,829), (78,780), (63,634),  (32,329), (22,228), (11,114), (74,749), (23,236);
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT a1<>a2, a1, a2, b2, b3, c3, SUBSTR(filler1,1,1) AS s1, SUBSTR(filler2,1,1) AS s2 FROM t1,t2,t3 WHERE a1=a2 AND b2=b3 AND MOD(c3,10)>7;
