CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1);
CREATE TABLE t2 AS SELECT * FROM t1;
CREATE TABLE t3 AS SELECT * FROM t1;
CREATE VIEW v1 AS SELECT * FROM t3;
FLUSH TABLES WITH READ LOCK;
SELECT COUNT(*) FROM information_schema.columns WHERE table_name='db';
UNLOCK TABLES;
LOCK TABLE t1 READ, v1 READ;
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM v1;
SELECT COUNT(*) FROM information_schema.columns WHERE table_name='db';
SELECT COUNT(*) FROM information_schema.tables m JOIN information_schema.columns n ON m.table_name = n.table_name WHERE m.table_name='db';
SELECT COUNT(*) FROM information_schema.columns, t1 WHERE table_name='db';
SELECT COUNT(*) FROM information_schema.columns, v1 WHERE table_name='db';
SELECT COUNT(*) FROM information_schema.columns, t2 WHERE table_name='db';
UNLOCK TABLES;
CREATE FUNCTION func1() RETURNS INT DETERMINISTIC BEGIN DECLARE a int; SELECT COUNT(*) INTO a FROM information_schema.columns WHERE table_name='db'; RETURN a; END ;
CREATE PROCEDURE proc1() BEGIN DECLARE i INT; SELECT (func1() + COUNT(*)) INTO i FROM information_schema.tables m JOIN information_schema.columns n ON m.table_name = n.table_name WHERE m.table_name='db'; INSERT INTO t1 VALUES (i); END ;
CALL proc1();
SELECT * FROM t1;
LOCK TABLE t1 WRITE, t1 as X READ, t3 READ;
SELECT func1() as COUNT_FROM_SP FROM t3;
SELECT func1() as COUNT_FROM_SP, COUNT(*) FROM information_schema.tables m JOIN information_schema.columns n ON m.table_name = n.table_name WHERE m.table_name='db';
CALL proc1();
SELECT * FROM t1 as X;
UNLOCK TABLES;
CREATE TRIGGER trig1 AFTER INSERT ON t1 FOR EACH ROW INSERT INTO t2 SELECT COUNT(*)>1 FROM information_schema.columns;
INSERT INTO t1 VALUES(1);
SELECT * FROM t2;
LOCK TABLE t1 WRITE, t2 WRITE;
INSERT INTO t1 VALUES(1);
SELECT * FROM t2;
UNLOCK TABLES;
SET TRANSACTION_ISOLATION='SERIALIZABLE';
SET AUTOCOMMIT=0;
LOCK TABLES t1 READ;
SELECT COUNT(*) > 0 FROM information_schema.tables;
DROP TABLE t2;
UNLOCK TABLES;
SET TRANSACTION_ISOLATION=default;
SET AUTOCOMMIT=default;
DROP TABLE t1, t3;
DROP VIEW v1;
DROP FUNCTION func1;
DROP PROCEDURE proc1;
